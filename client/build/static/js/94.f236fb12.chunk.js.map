{"version":3,"sources":["../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/CardTitle.js","../node_modules/reactstrap/es/PaginationItem.js","../node_modules/reactstrap/es/PaginationLink.js","../node_modules/reactstrap/es/Pagination.js","../node_modules/reactstrap/es/Table.js","../node_modules/react-table/index.js","../../src/publicUtils.js","../../src/utils.js","../../src/makeDefaultPluginHooks.js","../../src/hooks/useColumnVisibility.js","../../src/hooks/useTable.js","../../src/plugin-hooks/useExpanded.js","../../src/filterTypes.js","../../src/plugin-hooks/useFilters.js","../../src/plugin-hooks/useGlobalFilter.js","../../src/aggregations.js","../../src/plugin-hooks/useGroupBy.js","../../src/sortTypes.js","../../src/plugin-hooks/useSortBy.js","../../src/plugin-hooks/usePagination.js","../../src/plugin-hooks/_UNSTABLE_usePivotColumns.js","../../src/plugin-hooks/useRowSelect.js","../../src/plugin-hooks/useRowState.js","../../src/plugin-hooks/useColumnOrder.js","../../src/plugin-hooks/useResizeColumns.js","../../src/plugin-hooks/useAbsoluteLayout.js","../../src/plugin-hooks/useBlockLayout.js","../../src/plugin-hooks/useFlexLayout.js","../../src/plugin-hooks/useGridLayout.js"],"names":["propTypes","tag","tagPropType","inverse","PropTypes","bool","color","string","body","outline","className","cssModule","object","innerRef","oneOfType","func","Card","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps","CardBody","CardTitle","active","children","node","disabled","PaginationItem","next","previous","first","last","PaginationLink","defaultAriaLabel","defaultCaret","ariaLabel","Array","isArray","length","href","key","listClassName","size","listTag","Pagination","_classNames","ListTag","label","listClasses","bordered","borderless","striped","dark","hover","responsive","responsiveTag","Table","ResponsiveTag","table","responsiveClassName","module","exports","require","actions","init","defaultRenderer","value","emptyRenderer","defaultColumn","Cell","width","minWidth","maxWidth","Number","MAX_SAFE_INTEGER","mergeProps","propList","reduce","style","makePropGetter","hooks","meta","userProps","prev","handlePropGetter","prevProps","reduceHooks","initial","allowUndefined","loopHooks","context","forEach","hook","ensurePluginOrder","plugins","befores","pluginName","afters","findIndex","plugin","before","functionalUpdate","updater","old","useGetLatest","obj","useRef","current","useCallback","safeUseLayoutEffect","document","useLayoutEffect","useEffect","useMountedLayoutEffect","fn","deps","mountedRef","makeRenderer","instance","column","type","Comp","console","info","Error","flexRender","component","proto","Object","getPrototypeOf","prototype","isReactComponent","$$typeof","includes","description","linkColumnStructure","columns","parent","depth","map","assignColumnAccessor","flattenColumns","flattenBy","id","accessor","Header","accessorPath","split","path","def","val","cacheKey","JSON","stringify","pathObj","pathObjCache","get","flattenDeep","arr","newArr","i","push","String","d","replace","join","reOpenBracket","reCloseBracket","set","cursor","pathPart","e","row","error","assign","decorateColumn","userDefaultColumn","Footer","originalWidth","makeHeaderGroups","allColumns","additionalHeaderProperties","headerGroups","scanColumns","uid","getUID","headerGroup","headers","parentColumns","hasParents","some","newParent","latestParentColumn","reverse","originalId","placeholderOf","Map","getFirstDefined","args","isFunction","a","flat","recurse","expandRows","rows","manualExpandedKey","expanded","expandSubRows","expandedRows","handleRow","addToExpandedRows","isExpanded","original","canExpand","subRows","getFilterMethod","filter","userFilterTypes","filterTypes","text","shouldAutoRemoveFilter","autoRemove","unpreparedAccessWarning","passiveSupported","defaultGetTableProps","role","defaultGetTableBodyProps","defaultGetHeaderProps","colSpan","totalVisibleHeaderCount","defaultGetFooterProps","defaultGetHeaderGroupProps","index","defaultGetFooterGroupProps","defaultGetRowProps","defaultGetCellProps","cell","makeDefaultPluginHooks","useOptions","stateReducers","useControlledState","columnsDeps","allColumnsDeps","accessValue","materializedColumns","materializedColumnsDeps","useInstanceAfterData","visibleColumns","visibleColumnsDeps","headerGroupsDeps","useInstanceBeforeDimensions","useInstance","prepareRow","getTableProps","getTableBodyProps","getHeaderGroupProps","getFooterGroupProps","getHeaderProps","getFooterProps","getRowProps","getCellProps","useFinalInstance","resetHiddenColumns","toggleHideColumn","setHiddenColumns","toggleHideAllColumns","useColumnVisibility","getToggleHiddenProps","defaultGetToggleHiddenProps","getToggleHideAllColumnsProps","defaultGetToggleHideAllColumnsProps","reducer","state","hiddenColumns","onChange","toggleHidden","target","checked","isVisible","title","allColumnsHidden","indeterminate","action","previousState","initialState","columnId","handleColumn","parentVisible","subColumn","subHeader","flatHeaders","dispatch","getHooks","autoResetHiddenColumns","getInstance","getAutoResetHiddenColumns","defaultInitialState","defaultColumnInstance","defaultReducer","prevState","defaultGetSubRows","defaultGetRowId","defaultUseControlledState","applyDefaults","getSubRows","getRowId","stateReducer","calculateHeaderWidths","left","sumTotalMinWidth","sumTotalWidth","sumTotalMaxWidth","sumTotalFlexWidth","subHeaders","header","totalLeft","totalMinWidth","totalWidth","totalMaxWidth","totalFlexWidth","Math","min","max","canResize","accessRowsForColumn","data","flatRows","rowsById","accessValueHooks","originalRow","rowIndex","accessRow","parentRows","originalSubRows","cells","values","resetExpanded","toggleRowExpanded","toggleAllRowsExpanded","useExpanded","getToggleAllRowsExpandedProps","defaultGetToggleAllRowsExpandedProps","getToggleRowExpandedProps","defaultGetToggleRowExpandedProps","onClick","isAllRowsExpanded","keys","rowId","setExpanded","exists","shouldExist","paginateExpandedRows","autoResetExpanded","getAutoResetExpanded","Boolean","useMemo","expandedDepth","maxDepth","splitId","preExpandedRows","ids","filterValue","rowValue","toLowerCase","exactText","exactTextCase","includesAll","every","includesSome","includesValue","exact","equals","between","Infinity","temp","resetFilters","setFilter","setAllFilters","useFilters","filters","find","filterMethod","previousfilter","newFilter","manualFilters","defaultCanFilter","disableFilters","autoResetFilters","columnDefaultCanFilter","columnDisableFilters","canFilter","undefined","found","filteredFlatRows","filteredRowsById","filterRows","filteredRows","filteredSoFar","preFilteredRows","warn","getAutoResetFilters","preFilteredFlatRows","preFilteredRowsById","resetGlobalFilter","setGlobalFilter","useGlobalFilter","globalFilter","manualGlobalFilter","globalFilterValue","autoResetGlobalFilter","disableGlobalFilter","columnDisableGlobalFilter","filterableColumns","c","globalFilteredRows","globalFilteredFlatRows","globalFilteredRowsById","getAutoResetGlobalFilter","preGlobalFilteredRows","preGlobalFilteredFlatRows","preGlobalFilteredRowsById","sum","aggregatedValues","mid","floor","nums","sort","b","from","Set","emptyArray","emptyObject","resetGroupBy","setGroupBy","toggleGroupBy","useGroupBy","getGroupByToggleProps","defaultGetGroupByToggleProps","groupBy","canGroupBy","persist","resolvedGroupBy","groupByColumns","col","g","nonGroupByColumns","isGrouped","groupedIndex","indexOf","defaultUserAggregations","groupByFn","defaultGroupByFn","manualGroupBy","aggregations","userAggregations","autoResetGroupBy","disableGroupBy","defaultCanGroupBy","defaultColumnGroupBy","defaultGroupBy","columnDisableGroupBy","Aggregated","existingGroupBy","groupedFlatRows","groupedRowsById","onlyGroupedFlatRows","onlyGroupedRowsById","nonGroupedFlatRows","nonGroupedRowsById","groupedRows","groupUpRecursively","parentId","rowGroupsMap","entries","groupByVal","leafRows","aggregateFn","aggregate","groupedValues","leafValues","columnValue","aggregateValue","aggregateValueFn","groupByID","subRow","getAutoResetGroupBy","preGroupedRows","preGroupedFlatRow","preGroupedRowsById","allCells","isPlaceholder","isAggregated","resKey","reSplitAlphaNumeric","compareBasic","getRowValuesByColumnID","row1","row2","toString","isNaN","rowA","rowB","aa","shift","bb","an","parseInt","bn","combo","getTime","alower","blower","replaceNonNumeric","resetSortBy","setSortBy","toggleSortBy","clearSortBy","sortType","sortDescFirst","useSortBy","getSortByToggleProps","defaultGetSortByToggleProps","isMultiSortEvent","shiftKey","canSort","disableMultiSort","sortBy","sortAction","desc","multi","disableSortRemove","disableMultiRemove","maxMultiSortColCount","existingSortBy","existingIndex","hasDescDefined","newSortBy","splice","orderByFn","defaultOrderByFn","userSortTypes","sortTypes","manualSortBy","defaultCanSort","disableSortBy","autoResetSortBy","defaultColumnCanSort","columnDisableSortBy","columnSort","isSorted","sortedIndex","isSortedDesc","sortedFlatRows","availableSortBy","sortData","sortedData","sortMethod","sortInverted","sortedRows","getAutoResetSortBy","preSortedRows","preSortedFlatRows","funcs","dirs","sortFn","sortInt","resetPage","gotoPage","setPageSize","usePagination","pageSize","pageIndex","pageCount","page","newPageIndex","canNavigate","topRowIndex","autoResetPage","userPageCount","manualPagination","getAutoResetPage","ceil","pageOptions","fill","pageStart","pageEnd","slice","canPreviousPage","canNextPage","previousPage","nextPage","resetPivot","togglePivot","_UNSTABLE_usePivotColumns","getPivotToggleProps","defaultGetPivotToggleProps","defaultPivotColumns","canPivot","pivotColumns","setPivot","resolvedPivot","isPivotSource","uniqueValues","add","materialized","sourceColumns","newMaterialized","buildPivotColumns","pivotFilters","pivotColumn","u","columnGroup","PivotHeader","uniqueValue","isPivotGroup","pivotValue","sourceColumn","isPivoted","autoResetPivot","manaulPivot","disablePivot","defaultCanPivot","defaultColumnPivot","defaultPivot","columnDisablePivot","getAutoResetPivot","resetSelectedRows","toggleAllRowsSelected","toggleRowSelected","toggleAllPageRowsSelected","useRowSelect","getToggleRowSelectedProps","defaultGetToggleRowSelectedProps","getToggleAllRowsSelectedProps","defaultGetToggleAllRowsSelectedProps","getToggleAllPageRowsSelectedProps","defaultGetToggleAllPageRowsSelectedProps","manualRowSelectedKey","isSelected","isSomeSelected","isAllRowsSelected","selectedRowIds","isAllPageRowsSelected","setSelected","selectAll","selectSubRows","newSelectedRowIds","handleRowById","autoResetSelectedRows","selectedFlatRows","getRowIsSelected","allChildrenSelected","someSelected","getAutoResetSelectedRows","defaultInitialRowStateAccessor","defaultInitialCellStateAccessor","setRowState","setCellState","resetRowState","useRowState","initialRowStateAccessor","initialCellStateAccessor","rowState","oldRowState","oldCellState","cellState","autoResetRowState","getAutoResetRowState","setState","resetColumnOrder","setColumnOrder","useColumnOrder","columnOrder","columnOrderCopy","columnsCopy","columnsInOrder","targetColumnId","foundIndex","columnStartResizing","columnResizing","columnDoneResizing","resetResize","useResizeColumns","getResizerProps","defaultGetResizerProps","position","onResizeStart","isTouchEvent","touches","headerIdWidths","leafHeaders","recurseHeader","clientX","round","dispatchMove","clientXPos","dispatchEnd","handlersAndEvents","mouse","moveEvent","moveHandler","upEvent","upHandler","removeEventListener","touch","cancelable","preventDefault","stopPropagation","events","passiveIfSupported","supported","options","window","addEventListener","err","passive","columnWidth","onMouseDown","onTouchStart","draggable","columnWidths","startX","isResizingColumn","percentageDeltaX","newColumnWidths","headerId","headerWidth","disableResizing","isResizing","autoResetResize","getAutoResetResize","resetResizing","cellStyles","top","useAbsoluteLayout","getRowStyles","totalColumnsWidth","display","boxSizing","useBlockLayout","useFlexLayout","totalColumnsMinWidth","flex","useGridLayout","gridTemplateColumns","gridLayout","w","columnIndex","elWidth","getElementById","offsetWidth","startingWidth","newWidth","columnWidthsCopy","defaultFn","defaultWait","debounceRef","getDefaultFn","getDefaultWait","promise","Promise","resolve","reject","timeout","clearTimeout","setTimeout","userColumns","getStateReducer","s","handler","useReducer","reducerState","allColumnsQueue","initialRows","all","visibleColumnsDep","totalColumnsMaxWidth","render","footerGroups"],"mappings":"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","file":"static/js/94.f236fb12.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  disabled: PropTypes.bool,\n  tag: tagPropType\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar PaginationItem = function PaginationItem(props) {\n  var active = props.active,\n      className = props.className,\n      cssModule = props.cssModule,\n      disabled = props.disabled,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"active\", \"className\", \"cssModule\", \"disabled\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'page-item', {\n    active: active,\n    disabled: disabled\n  }), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nPaginationItem.propTypes = propTypes;\nPaginationItem.defaultProps = defaultProps;\nexport default PaginationItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  'aria-label': PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  next: PropTypes.bool,\n  previous: PropTypes.bool,\n  first: PropTypes.bool,\n  last: PropTypes.bool,\n  tag: tagPropType\n};\nvar defaultProps = {\n  tag: 'a'\n};\n\nvar PaginationLink = function PaginationLink(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      next = props.next,\n      previous = props.previous,\n      first = props.first,\n      last = props.last,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"next\", \"previous\", \"first\", \"last\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'page-link'), cssModule);\n  var defaultAriaLabel;\n\n  if (previous) {\n    defaultAriaLabel = 'Previous';\n  } else if (next) {\n    defaultAriaLabel = 'Next';\n  } else if (first) {\n    defaultAriaLabel = 'First';\n  } else if (last) {\n    defaultAriaLabel = 'Last';\n  }\n\n  var ariaLabel = props['aria-label'] || defaultAriaLabel;\n  var defaultCaret;\n\n  if (previous) {\n    defaultCaret = \"\\u2039\";\n  } else if (next) {\n    defaultCaret = \"\\u203A\";\n  } else if (first) {\n    defaultCaret = \"\\xAB\";\n  } else if (last) {\n    defaultCaret = \"\\xBB\";\n  }\n\n  var children = props.children;\n\n  if (children && Array.isArray(children) && children.length === 0) {\n    children = null;\n  }\n\n  if (!attributes.href && Tag === 'a') {\n    Tag = 'button';\n  }\n\n  if (previous || next || first || last) {\n    children = [/*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      key: \"caret\"\n    }, children || defaultCaret), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\",\n      key: \"sr\"\n    }, ariaLabel)];\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": ariaLabel\n  }), children);\n};\n\nPaginationLink.propTypes = propTypes;\nPaginationLink.defaultProps = defaultProps;\nexport default PaginationLink;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  tag: tagPropType,\n  listTag: tagPropType,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ul',\n  'aria-label': 'pagination'\n};\n\nvar Pagination = function Pagination(props) {\n  var _classNames;\n\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      size = props.size,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"size\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames(listClassName, 'pagination', (_classNames = {}, _classNames[\"pagination-\" + size] = !!size, _classNames)), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, {\n    className: classes,\n    \"aria-label\": label\n  }, /*#__PURE__*/React.createElement(ListTag, _extends({}, attributes, {\n    className: listClasses\n  })));\n};\n\nPagination.propTypes = propTypes;\nPagination.defaultProps = defaultProps;\nexport default Pagination;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  bordered: PropTypes.bool,\n  borderless: PropTypes.bool,\n  striped: PropTypes.bool,\n  dark: PropTypes.bool,\n  hover: PropTypes.bool,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType,\n  responsiveTag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n};\nvar defaultProps = {\n  tag: 'table',\n  responsiveTag: 'div'\n};\n\nvar Table = function Table(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      bordered = props.bordered,\n      borderless = props.borderless,\n      striped = props.striped,\n      dark = props.dark,\n      hover = props.hover,\n      responsive = props.responsive,\n      Tag = props.tag,\n      ResponsiveTag = props.responsiveTag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n\n  if (responsive) {\n    var responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : \"table-responsive-\" + responsive, cssModule);\n    return /*#__PURE__*/React.createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n\n  return table;\n};\n\nTable.propTypes = propTypes;\nTable.defaultProps = defaultProps;\nexport default Table;","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/react-table.production.min.js')\n} else {\n  module.exports = require('./dist/react-table.development.js')\n}\n","import React from 'react'\n\nlet renderErr = 'Renderer Error ☝️'\n\nexport const actions = {\n  init: 'init',\n}\n\nexport const defaultRenderer = ({ value = '' }) => value;\nexport const emptyRenderer = () => <>&nbsp;</>;\n\nexport const defaultColumn = {\n  Cell: defaultRenderer,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\nfunction mergeProps(...propList) {\n  return propList.reduce((props, next) => {\n    const { style, className, ...rest } = next\n\n    props = {\n      ...props,\n      ...rest,\n    }\n\n    if (style) {\n      props.style = props.style\n        ? { ...(props.style || {}), ...(style || {}) }\n        : style\n    }\n\n    if (className) {\n      props.className = props.className\n        ? props.className + ' ' + className\n        : className\n    }\n\n    if (props.className === '') {\n      delete props.className\n    }\n\n    return props\n  }, {})\n}\n\nfunction handlePropGetter(prevProps, userProps, meta) {\n  // Handle a lambda, pass it the previous props\n  if (typeof userProps === 'function') {\n    return handlePropGetter({}, userProps(prevProps, meta))\n  }\n\n  // Handle an array, merge each item as separate props\n  if (Array.isArray(userProps)) {\n    return mergeProps(prevProps, ...userProps)\n  }\n\n  // Handle an object by default, merge the two objects\n  return mergeProps(prevProps, userProps)\n}\n\nexport const makePropGetter = (hooks, meta = {}) => {\n  return (userProps = {}) =>\n    [...hooks, userProps].reduce(\n      (prev, next) =>\n        handlePropGetter(prev, next, {\n          ...meta,\n          userProps,\n        }),\n      {}\n    )\n}\n\nexport const reduceHooks = (hooks, initial, meta = {}, allowUndefined) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (!allowUndefined && typeof nextValue === 'undefined') {\n        console.info(next)\n        throw new Error(\n          'React Table: A reducer hook ☝️ just returned undefined! This is not allowed.'\n        )\n      }\n    }\n    return nextValue\n  }, initial)\n\nexport const loopHooks = (hooks, context, meta = {}) =>\n  hooks.forEach(hook => {\n    const nextValue = hook(context, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof nextValue !== 'undefined') {\n        console.info(hook, nextValue)\n        throw new Error(\n          'React Table: A loop-type hook ☝️ just returned a value! This is not allowed.'\n        )\n      }\n    }\n  })\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  if (process.env.NODE_ENV !== 'production' && afters) {\n    throw new Error(\n      `Defining plugins in the \"after\" section of ensurePluginOrder is no longer supported (see plugin ${pluginName})`\n    )\n  }\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`The plugin \"${pluginName}\" was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n    }\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n        )\n      }\n    }\n  })\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useMountedLayoutEffect(fn, deps) {\n  const mountedRef = React.useRef(false)\n\n  safeUseLayoutEffect(() => {\n    if (mountedRef.current) {\n      fn()\n    }\n    mountedRef.current = true\n    // eslint-disable-next-line\n  }, deps)\n}\n\nexport function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n\n  const getDefaultFn = useGetLatest(defaultFn)\n  const getDefaultWait = useGetLatest(defaultWait)\n\n  return React.useCallback(\n    async (...args) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise((resolve, reject) => {\n          debounceRef.current.resolve = resolve\n          debounceRef.current.reject = reject\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await getDefaultFn()(...args))\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, getDefaultWait())\n\n      return debounceRef.current.promise\n    },\n    [getDefaultFn, getDefaultWait]\n  )\n}\n\nexport function makeRenderer(instance, column, meta = {}) {\n  return (type, userProps = {}) => {\n    const Comp = typeof type === 'string' ? column[type] : type\n\n    if (typeof Comp === 'undefined') {\n      console.info(column)\n      throw new Error(renderErr)\n    }\n\n    return flexRender(Comp, { ...instance, column, ...meta, ...userProps })\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isReactComponent(component) {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n","import { defaultColumn, emptyRenderer } from './publicUtils'\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\n// Build the visible columns, headers and flat column list\nexport function linkColumnStructure(columns, parent, depth = 0) {\n  return columns.map(column => {\n    column = {\n      ...column,\n      parent,\n      depth,\n    }\n\n    assignColumnAccessor(column)\n\n    if (column.columns) {\n      column.columns = linkColumnStructure(column.columns, column, depth + 1)\n    }\n    return column\n  })\n}\n\nexport function flattenColumns(columns) {\n  return flattenBy(columns, 'columns')\n}\n\nexport function assignColumnAccessor(column) {\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  Object.assign(column, {\n    id,\n    accessor,\n  })\n\n  return column\n}\n\nexport function decorateColumn(column, userDefaultColumn) {\n  if (!userDefaultColumn) {\n    throw new Error()\n  }\n  Object.assign(column, {\n    // Make sure there is a fallback header, just in case\n    Header: emptyRenderer,\n    Footer: emptyRenderer,\n    ...defaultColumn,\n    ...userDefaultColumn,\n    ...column,\n  })\n\n  Object.assign(column, {\n    originalWidth: column.width,\n  })\n\n  return column\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(\n  allColumns,\n  defaultColumn,\n  additionalHeaderProperties = () => ({})\n) {\n  const headerGroups = []\n\n  let scanColumns = allColumns\n\n  let uid = 0\n  const getUID = () => uid++\n\n  while (scanColumns.length) {\n    // The header group we are creating\n    const headerGroup = {\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const parentColumns = []\n\n    const hasParents = scanColumns.some(d => d.parent)\n\n    // Scan each column for parents\n    scanColumns.forEach(column => {\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      let newParent\n\n      if (hasParents) {\n        // If the column has a parent, add it if necessary\n        if (column.parent) {\n          newParent = {\n            ...column.parent,\n            originalId: column.parent.id,\n            id: `${column.parent.id}_${getUID()}`,\n            headers: [column],\n            ...additionalHeaderProperties(column),\n          }\n        } else {\n          // If other columns have parents, we'll need to add a place holder if necessary\n          const originalId = `${column.id}_placeholder`\n          newParent = decorateColumn(\n            {\n              originalId,\n              id: `${column.id}_placeholder_${getUID()}`,\n              placeholderOf: column,\n              headers: [column],\n              ...additionalHeaderProperties(column),\n            },\n            defaultColumn\n          )\n        }\n\n        // If the resulting parent columns are the same, just add\n        // the column and increment the header span\n        if (\n          latestParentColumn &&\n          latestParentColumn.originalId === newParent.originalId\n        ) {\n          latestParentColumn.headers.push(column)\n        } else {\n          parentColumns.push(newParent)\n        }\n      }\n\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    // Start scanning the parent columns\n    scanColumns = parentColumns\n  }\n\n  return headerGroups.reverse()\n}\n\nconst pathObjCache = new Map()\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path)\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path)\n      pathObjCache.set(cacheKey, pathObj)\n      return pathObj\n    })()\n\n  let val\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(arr, key) {\n  const flat = []\n\n  const recurse = arr => {\n    arr.forEach(d => {\n      if (!d[key]) {\n        flat.push(d)\n      } else {\n        recurse(d[key])\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = (row, addToExpandedRows = true) => {\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) || expanded[row.id]\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    if (addToExpandedRows) {\n      expandedRows.push(row)\n    }\n\n    if (row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(row => handleRow(row, expandSubRows))\n    }\n  }\n\n  rows.forEach(row => handleRow(row))\n\n  return expandedRows\n}\n\nexport function getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n\nexport function shouldAutoRemoveFilter(autoRemove, value, column) {\n  return autoRemove ? autoRemove(value, column) : typeof value === 'undefined'\n}\n\nexport function unpreparedAccessWarning() {\n  throw new Error(\n    'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n  )\n}\n\nlet passiveSupported = null\nexport function passiveEventSupported() {\n  // memoize support to avoid adding multiple test events\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    window.addEventListener('test', null, options)\n    window.removeEventListener('test', null, options)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\n//\n\nconst reOpenBracket = /\\[/g\nconst reCloseBracket = /\\]/g\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","const defaultGetTableProps = props => ({\n  role: 'table',\n  ...props,\n})\n\nconst defaultGetTableBodyProps = props => ({\n  role: 'rowgroup',\n  ...props,\n})\n\nconst defaultGetHeaderProps = (props, { column }) => ({\n  key: `header_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  role: 'columnheader',\n  ...props,\n})\n\nconst defaultGetFooterProps = (props, { column }) => ({\n  key: `footer_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  ...props,\n})\n\nconst defaultGetHeaderGroupProps = (props, { index }) => ({\n  key: `headerGroup_${index}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetFooterGroupProps = (props, { index }) => ({\n  key: `footerGroup_${index}`,\n  ...props,\n})\n\nconst defaultGetRowProps = (props, { row }) => ({\n  key: `row_${row.id}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetCellProps = (props, { cell }) => ({\n  key: `cell_${cell.row.id}_${cell.column.id}`,\n  role: 'cell',\n  ...props,\n})\n\nexport default function makeDefaultPluginHooks() {\n  return {\n    useOptions: [],\n    stateReducers: [],\n    useControlledState: [],\n    columns: [],\n    columnsDeps: [],\n    allColumns: [],\n    allColumnsDeps: [],\n    accessValue: [],\n    materializedColumns: [],\n    materializedColumnsDeps: [],\n    useInstanceAfterData: [],\n    visibleColumns: [],\n    visibleColumnsDeps: [],\n    headerGroups: [],\n    headerGroupsDeps: [],\n    useInstanceBeforeDimensions: [],\n    useInstance: [],\n    prepareRow: [],\n    getTableProps: [defaultGetTableProps],\n    getTableBodyProps: [defaultGetTableBodyProps],\n    getHeaderGroupProps: [defaultGetHeaderGroupProps],\n    getFooterGroupProps: [defaultGetFooterGroupProps],\n    getHeaderProps: [defaultGetHeaderProps],\n    getFooterProps: [defaultGetFooterProps],\n    getRowProps: [defaultGetRowProps],\n    getCellProps: [defaultGetCellProps],\n    useFinalInstance: [],\n  }\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useGetLatest,\n  makePropGetter,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nactions.resetHiddenColumns = 'resetHiddenColumns'\nactions.toggleHideColumn = 'toggleHideColumn'\nactions.setHiddenColumns = 'setHiddenColumns'\nactions.toggleHideAllColumns = 'toggleHideAllColumns'\n\nexport const useColumnVisibility = hooks => {\n  hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps]\n  hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps]\n\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n  hooks.headerGroupsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.hiddenColumns,\n  ])\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnVisibility.pluginName = 'useColumnVisibility'\n\nconst defaultGetToggleHiddenProps = (props, { column }) => [\n  props,\n  {\n    onChange: e => {\n      column.toggleHidden(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: column.isVisible,\n    title: 'Toggle Column Visible',\n  },\n]\n\nconst defaultGetToggleHideAllColumnsProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleHideAllColumns(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n    title: 'Toggle All Columns Hidden',\n    indeterminate:\n      !instance.allColumnsHidden && instance.state.hiddenColumns.length,\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      hiddenColumns: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: instance.initialState.hiddenColumns || [],\n    }\n  }\n\n  if (action.type === actions.toggleHideColumn) {\n    const should =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.includes(action.columnId)\n\n    const hiddenColumns = should\n      ? [...state.hiddenColumns, action.columnId]\n      : state.hiddenColumns.filter(d => d !== action.columnId)\n\n    return {\n      ...state,\n      hiddenColumns,\n    }\n  }\n\n  if (action.type === actions.setHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: functionalUpdate(action.value, state.hiddenColumns),\n    }\n  }\n\n  if (action.type === actions.toggleHideAllColumns) {\n    const shouldAll =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.length\n\n    return {\n      ...state,\n      hiddenColumns: shouldAll ? instance.allColumns.map(d => d.id) : [],\n    }\n  }\n}\n\nfunction useInstanceBeforeDimensions(instance) {\n  const {\n    headers,\n    state: { hiddenColumns },\n  } = instance\n\n  const isMountedRef = React.useRef(false)\n\n  if (!isMountedRef.current) {\n  }\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible && !hiddenColumns.includes(column.id)\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    flatHeaders,\n    dispatch,\n    allColumns,\n    getHooks,\n    state: { hiddenColumns },\n    autoResetHiddenColumns = true,\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  const allColumnsHidden = allColumns.length === hiddenColumns.length\n\n  const toggleHideColumn = React.useCallback(\n    (columnId, value) =>\n      dispatch({ type: actions.toggleHideColumn, columnId, value }),\n    [dispatch]\n  )\n\n  const setHiddenColumns = React.useCallback(\n    value => dispatch({ type: actions.setHiddenColumns, value }),\n    [dispatch]\n  )\n\n  const toggleHideAllColumns = React.useCallback(\n    value => dispatch({ type: actions.toggleHideAllColumns, value }),\n    [dispatch]\n  )\n\n  const getToggleHideAllColumnsProps = makePropGetter(\n    getHooks().getToggleHideAllColumnsProps,\n    { instance: getInstance() }\n  )\n\n  flatHeaders.forEach(column => {\n    column.toggleHidden = value => {\n      dispatch({\n        type: actions.toggleHideColumn,\n        columnId: column.id,\n        value,\n      })\n    }\n\n    column.getToggleHiddenProps = makePropGetter(\n      getHooks().getToggleHiddenProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n  })\n\n  const getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetHiddenColumns()) {\n      dispatch({ type: actions.resetHiddenColumns })\n    }\n  }, [dispatch, columns])\n\n  Object.assign(instance, {\n    allColumnsHidden,\n    toggleHideColumn,\n    setHiddenColumns,\n    toggleHideAllColumns,\n    getToggleHideAllColumnsProps,\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  linkColumnStructure,\n  flattenColumns,\n  assignColumnAccessor,\n  unpreparedAccessWarning,\n  makeHeaderGroups,\n  decorateColumn,\n} from '../utils'\n\nimport {\n  useGetLatest,\n  reduceHooks,\n  actions,\n  loopHooks,\n  makePropGetter,\n  makeRenderer,\n} from '../publicUtils'\n\nimport makeDefaultPluginHooks from '../makeDefaultPluginHooks'\n\nimport { useColumnVisibility } from './useColumnVisibility'\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (state, action, prevState) => state\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowId = (row, index, parent) =>\n  `${parent ? [parent.id, index].join('.') : index}`\nconst defaultUseControlledState = d => d\n\nfunction applyDefaults(props) {\n  const {\n    initialState = defaultInitialState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowId = defaultGetRowId,\n    stateReducer = defaultReducer,\n    useControlledState = defaultUseControlledState,\n    ...rest\n  } = props\n\n  return {\n    ...rest,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  }\n}\n\nexport const useTable = (props, ...plugins) => {\n  // Apply default props\n  props = applyDefaults(props)\n\n  // Add core plugins\n  plugins = [useColumnVisibility, ...plugins]\n\n  // Create the table instance\n  let instanceRef = React.useRef({})\n\n  // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n  const getInstance = useGetLatest(instanceRef.current)\n\n  // Assign the props, plugins and hooks to the instance\n  Object.assign(getInstance(), {\n    ...props,\n    plugins,\n    hooks: makeDefaultPluginHooks(),\n  })\n\n  // Allow plugins to register hooks as early as possible\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(getInstance().hooks)\n  })\n\n  // Consume all hooks and make a getter for them\n  const getHooks = useGetLatest(getInstance().hooks)\n  getInstance().getHooks = getHooks\n  delete getInstance().hooks\n\n  // Allow useOptions hooks to modify the options coming into the table\n  Object.assign(\n    getInstance(),\n    reduceHooks(getHooks().useOptions, applyDefaults(props))\n  )\n\n  const {\n    data,\n    columns: userColumns,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  } = getInstance()\n\n  // Setup user reducer ref\n  const getStateReducer = useGetLatest(stateReducer)\n\n  // Build the reducer\n  const reducer = React.useCallback(\n    (state, action) => {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({ action })\n        throw new Error('Unknown Action 👆')\n      }\n\n      // Reduce the state from all plugin reducers\n      return [\n        ...getHooks().stateReducers,\n        // Allow the user to add their own state reducer(s)\n        ...(Array.isArray(getStateReducer())\n          ? getStateReducer()\n          : [getStateReducer()]),\n      ].reduce(\n        (s, handler) => handler(s, action, state, getInstance()) || s,\n        state\n      )\n    },\n    [getHooks, getStateReducer, getInstance]\n  )\n\n  // Start the reducer\n  const [reducerState, dispatch] = React.useReducer(reducer, undefined, () =>\n    reducer(initialState, { type: actions.init })\n  )\n\n  // Allow the user to control the final state with hooks\n  const state = reduceHooks(\n    [...getHooks().useControlledState, useControlledState],\n    reducerState,\n    { instance: getInstance() }\n  )\n\n  Object.assign(getInstance(), {\n    state,\n    dispatch,\n  })\n\n  // Decorate All the columns\n  const columns = React.useMemo(\n    () =>\n      linkColumnStructure(\n        reduceHooks(getHooks().columns, userColumns, {\n          instance: getInstance(),\n        })\n      ),\n    [\n      getHooks,\n      getInstance,\n      userColumns,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().columnsDeps, [], { instance: getInstance() }),\n    ]\n  )\n  getInstance().columns = columns\n\n  // Get the flat list of all columns and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let allColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance(),\n      }).map(assignColumnAccessor),\n    [\n      columns,\n      getHooks,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().allColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().allColumns = allColumns\n\n  // Access the row model using initial columns\n  const [rows, flatRows, rowsById] = React.useMemo(() => {\n    let rows = []\n    let flatRows = []\n    const rowsById = {}\n\n    const allColumnsQueue = [...allColumns]\n\n    while (allColumnsQueue.length) {\n      const column = allColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return [rows, flatRows, rowsById]\n  }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance])\n\n  Object.assign(getInstance(), {\n    rows,\n    initialRows: [...rows],\n    flatRows,\n    rowsById,\n    // materializedColumns,\n  })\n\n  loopHooks(getHooks().useInstanceAfterData, getInstance())\n\n  // Get the flat list of all columns AFTER the rows\n  // have been access, and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let visibleColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance(),\n      }).map(d => decorateColumn(d, defaultColumn)),\n    [\n      getHooks,\n      allColumns,\n      getInstance,\n      defaultColumn,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().visibleColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n\n  // Combine new visible columns with all columns\n  allColumns = React.useMemo(() => {\n    const columns = [...visibleColumns]\n\n    allColumns.forEach(column => {\n      if (!columns.find(d => d.id === column.id)) {\n        columns.push(column)\n      }\n    })\n\n    return columns\n  }, [allColumns, visibleColumns])\n  getInstance().allColumns = allColumns\n\n  if (process.env.NODE_ENV !== 'production') {\n    const duplicateColumns = allColumns.filter((column, i) => {\n      return allColumns.findIndex(d => d.id === column.id) !== i\n    })\n\n    if (duplicateColumns.length) {\n      console.info(allColumns)\n      throw new Error(\n        `Duplicate columns were found with ids: \"${duplicateColumns\n          .map(d => d.id)\n          .join(', ')}\" in the columns array above`\n      )\n    }\n  }\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () =>\n      reduceHooks(\n        getHooks().headerGroups,\n        makeHeaderGroups(visibleColumns, defaultColumn),\n        getInstance()\n      ),\n    [\n      getHooks,\n      visibleColumns,\n      defaultColumn,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().headerGroupsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().headerGroups = headerGroups\n\n  // Get the first level of headers\n  const headers = React.useMemo(\n    () => (headerGroups.length ? headerGroups[0].headers : []),\n    [headerGroups]\n  )\n  getInstance().headers = headers\n\n  // Provide a flat header list for utilities\n  getInstance().flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  loopHooks(getHooks().useInstanceBeforeDimensions, getInstance())\n\n  // Filter columns down to visible ones\n  const visibleColumnsDep = visibleColumns\n    .filter(d => d.isVisible)\n    .map(d => d.id)\n    .sort()\n    .join('_')\n\n  visibleColumns = React.useMemo(\n    () => visibleColumns.filter(d => d.isVisible),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]\n  )\n  getInstance().visibleColumns = visibleColumns\n\n  // Header Visibility is needed by this point\n  const [\n    totalColumnsMinWidth,\n    totalColumnsWidth,\n    totalColumnsMaxWidth,\n  ] = calculateHeaderWidths(headers)\n\n  getInstance().totalColumnsMinWidth = totalColumnsMinWidth\n  getInstance().totalColumnsWidth = totalColumnsWidth\n  getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth\n\n  loopHooks(getHooks().useInstance, getInstance())\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  ;[...getInstance().flatHeaders, ...getInstance().allColumns].forEach(\n    column => {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column)\n\n      // Give columns/headers a default getHeaderProps\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column,\n      })\n\n      // Give columns/headers a default getFooterProps\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column,\n      })\n    }\n  )\n\n  getInstance().headerGroups = React.useMemo(\n    () =>\n      headerGroups.filter((headerGroup, i) => {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(column => {\n          const recurse = headers =>\n            headers.filter(column => {\n              if (column.headers) {\n                return recurse(column.headers)\n              }\n              return column.isVisible\n            }).length\n          if (column.headers) {\n            return recurse(column.headers)\n          }\n          return column.isVisible\n        })\n\n        // Give headerGroups getRowProps\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(\n            getHooks().getHeaderGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          headerGroup.getFooterGroupProps = makePropGetter(\n            getHooks().getFooterGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          return true\n        }\n\n        return false\n      }),\n    [headerGroups, getInstance, getHooks]\n  )\n\n  getInstance().footerGroups = [...getInstance().headerGroups].reverse()\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  getInstance().prepareRow = React.useCallback(\n    row => {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row,\n      })\n\n      // Build the visible cells for each row\n      row.allCells = allColumns.map(column => {\n        const value = row.values[column.id]\n\n        const cell = {\n          column,\n          row,\n          value,\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell,\n        })\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = makeRenderer(getInstance(), column, {\n          row,\n          cell,\n          value,\n        })\n\n        return cell\n      })\n\n      row.cells = visibleColumns.map(column =>\n        row.allCells.find(cell => cell.column.id === column.id)\n      )\n\n      // need to apply any row specific hooks (useExpanded requires this)\n      loopHooks(getHooks().prepareRow, row, { instance: getInstance() })\n    },\n    [getHooks, getInstance, allColumns, visibleColumns]\n  )\n\n  getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n    instance: getInstance(),\n  })\n\n  getInstance().getTableBodyProps = makePropGetter(\n    getHooks().getTableBodyProps,\n    {\n      instance: getInstance(),\n    }\n  )\n\n  loopHooks(getHooks().useFinalInstance, getInstance())\n\n  return getInstance()\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalMinWidth = 0\n  let sumTotalWidth = 0\n  let sumTotalMaxWidth = 0\n  let sumTotalFlexWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      const [\n        totalMinWidth,\n        totalWidth,\n        totalMaxWidth,\n        totalFlexWidth,\n      ] = calculateHeaderWidths(subHeaders, left)\n      header.totalMinWidth = totalMinWidth\n      header.totalWidth = totalWidth\n      header.totalMaxWidth = totalMaxWidth\n      header.totalFlexWidth = totalFlexWidth\n    } else {\n      header.totalMinWidth = header.minWidth\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n      header.totalMaxWidth = header.maxWidth\n      header.totalFlexWidth = header.canResize ? header.totalWidth : 0\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalMinWidth += header.totalMinWidth\n      sumTotalWidth += header.totalWidth\n      sumTotalMaxWidth += header.totalMaxWidth\n      sumTotalFlexWidth += header.totalFlexWidth\n    }\n  })\n\n  return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth]\n}\n\nfunction accessRowsForColumn({\n  data,\n  rows,\n  flatRows,\n  rowsById,\n  column,\n  getRowId,\n  getSubRows,\n  accessValueHooks,\n  getInstance,\n}) {\n  // Access the row's data column-by-column\n  // We do it this way so we can incrementally add materialized\n  // columns after the first pass and avoid excessive looping\n  const accessRow = (originalRow, rowIndex, depth = 0, parent, parentRows) => {\n    // Keep the original reference around\n    const original = originalRow\n\n    const id = getRowId(originalRow, rowIndex, parent)\n\n    let row = rowsById[id]\n\n    // If the row hasn't been created, let's make it\n    if (!row) {\n      row = {\n        id,\n        original,\n        index: rowIndex,\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n\n      // Push this row into the parentRows array\n      parentRows.push(row)\n      // Keep track of every row in a flat array\n      flatRows.push(row)\n      // Also keep track of every row by its ID\n      rowsById[id] = row\n\n      // Get the original subrows\n      row.originalSubRows = getSubRows(originalRow, rowIndex)\n\n      // Then recursively access them\n      if (row.originalSubRows) {\n        const subRows = []\n        row.originalSubRows.forEach((d, i) =>\n          accessRow(d, i, depth + 1, row, subRows)\n        )\n        // Keep the new subRows array on the row\n        row.subRows = subRows\n      }\n    } else if (row.subRows) {\n      // If the row exists, then it's already been accessed\n      // Keep recursing, but don't worry about passing the\n      // accumlator array (those rows already exist)\n      row.originalSubRows.forEach((d, i) => accessRow(d, i, depth + 1, row))\n    }\n\n    // If the column has an accessor, use it to get a value\n    if (column.accessor) {\n      row.values[column.id] = column.accessor(\n        originalRow,\n        rowIndex,\n        row,\n        parentRows,\n        data\n      )\n    }\n\n    // Allow plugins to manipulate the column value\n    row.values[column.id] = reduceHooks(\n      accessValueHooks,\n      row.values[column.id],\n      {\n        row,\n        column,\n        instance: getInstance(),\n      },\n      true\n    )\n  }\n\n  data.forEach((originalRow, rowIndex) =>\n    accessRow(originalRow, rowIndex, 0, undefined, rows)\n  )\n}\n","import React from 'react'\n\nimport { expandRows } from '../utils'\n\nimport {\n  useGetLatest,\n  actions,\n  useMountedLayoutEffect,\n  makePropGetter,\n  ensurePluginOrder,\n} from '../publicUtils'\n\n// Actions\nactions.resetExpanded = 'resetExpanded'\nactions.toggleRowExpanded = 'toggleRowExpanded'\nactions.toggleAllRowsExpanded = 'toggleAllRowsExpanded'\n\nexport const useExpanded = hooks => {\n  hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps]\n  hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nconst defaultGetToggleAllRowsExpandedProps = (props, { instance }) => [\n  props,\n  {\n    onClick: e => {\n      instance.toggleAllRowsExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle All Rows Expanded',\n  },\n]\n\nconst defaultGetToggleRowExpandedProps = (props, { row }) => [\n  props,\n  {\n    onClick: () => {\n      row.toggleRowExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle Row Expanded',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      expanded: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetExpanded) {\n    return {\n      ...state,\n      expanded: instance.initialState.expanded || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsExpanded) {\n    const { value } = action\n    const { isAllRowsExpanded, rowsById } = instance\n\n    const expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded\n\n    if (expandAll) {\n      const expanded = {}\n\n      Object.keys(rowsById).forEach(rowId => {\n        expanded[rowId] = true\n      })\n\n      return {\n        ...state,\n        expanded,\n      }\n    }\n\n    return {\n      ...state,\n      expanded: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowExpanded) {\n    const { id, value: setExpanded } = action\n    const exists = state.expanded[id]\n\n    const shouldExist =\n      typeof setExpanded !== 'undefined' ? setExpanded : !exists\n\n    if (!exists && shouldExist) {\n      return {\n        ...state,\n        expanded: {\n          ...state.expanded,\n          [id]: true,\n        },\n      }\n    } else if (exists && !shouldExist) {\n      const { [id]: _, ...rest } = state.expanded\n      return {\n        ...state,\n        expanded: rest,\n      }\n    } else {\n      return state\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    rowsById,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    autoResetExpanded = true,\n    getHooks,\n    plugins,\n    state: { expanded },\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'],\n    'useExpanded'\n  )\n\n  const getAutoResetExpanded = useGetLatest(autoResetExpanded)\n\n  let isAllRowsExpanded = Boolean(\n    Object.keys(rowsById).length && Object.keys(expanded).length\n  )\n\n  if (isAllRowsExpanded) {\n    if (Object.keys(rowsById).some(id => !expanded[id])) {\n      isAllRowsExpanded = false\n    }\n  }\n\n  // Bypass any effects from firing when this changes\n  useMountedLayoutEffect(() => {\n    if (getAutoResetExpanded()) {\n      dispatch({ type: actions.resetExpanded })\n    }\n  }, [dispatch, data])\n\n  const toggleRowExpanded = React.useCallback(\n    (id, value) => {\n      dispatch({ type: actions.toggleRowExpanded, id, value })\n    },\n    [dispatch]\n  )\n\n  const toggleAllRowsExpanded = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsExpanded, value }),\n    [dispatch]\n  )\n\n  const expandedRows = React.useMemo(() => {\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows])\n\n  const expandedDepth = React.useMemo(() => findExpandedDepth(expanded), [\n    expanded,\n  ])\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsExpandedProps = makePropGetter(\n    getHooks().getToggleAllRowsExpandedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    preExpandedRows: rows,\n    expandedRows,\n    rows: expandedRows,\n    expandedDepth,\n    isAllRowsExpanded,\n    toggleRowExpanded,\n    toggleAllRowsExpanded,\n    getToggleAllRowsExpandedProps,\n  })\n}\n\nfunction prepareRow(row, { instance: { getHooks }, instance }) {\n  row.toggleRowExpanded = set => instance.toggleRowExpanded(row.id, set)\n\n  row.getToggleRowExpandedProps = makePropGetter(\n    getHooks().getToggleRowExpandedProps,\n    {\n      instance,\n      row,\n    }\n  )\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  Object.keys(expanded).forEach(id => {\n    const splitId = id.split('.')\n    maxDepth = Math.max(maxDepth, splitId.length)\n  })\n\n  return maxDepth\n}\n","export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue.includes(filterValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const includesSome = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.some(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesSome.autoRemove = val => !val || !val.length\n\nexport const includesValue = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return filterValue.includes(rowValue)\n    })\n  })\n}\n\nincludesValue.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\n\nimport {\n  getFirstDefined,\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n} from '../utils'\n\nimport {\n  actions,\n  useGetLatest,\n  functionalUpdate,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetFilters = 'resetFilters'\nactions.setFilter = 'setFilter'\nactions.setAllFilters = 'setAllFilters'\n\nexport const useFilters = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      filters: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetFilters) {\n    return {\n      ...state,\n      filters: instance.initialState.filters || [],\n    }\n  }\n\n  if (action.type === actions.setFilter) {\n    const { columnId, filterValue } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    const column = allColumns.find(d => d.id === columnId)\n\n    if (!column) {\n      throw new Error(\n        `React-Table: Could not find a column with id: ${columnId}`\n      )\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const previousfilter = state.filters.find(d => d.id === columnId)\n\n    const newFilter = functionalUpdate(\n      filterValue,\n      previousfilter && previousfilter.value\n    )\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n      return {\n        ...state,\n        filters: state.filters.filter(d => d.id !== columnId),\n      }\n    }\n\n    if (previousfilter) {\n      return {\n        ...state,\n        filters: state.filters.map(d => {\n          if (d.id === columnId) {\n            return { id: columnId, value: newFilter }\n          }\n          return d\n        }),\n      }\n    }\n\n    return {\n      ...state,\n      filters: [...state.filters, { id: columnId, value: newFilter }],\n    }\n  }\n\n  if (action.type === actions.setAllFilters) {\n    const { filters } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    return {\n      ...state,\n      // Filter out undefined values\n      filters: functionalUpdate(filters, state.filters).filter(filter => {\n        const column = allColumns.find(d => d.id === filter.id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (\n          shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)\n        ) {\n          return false\n        }\n        return true\n      }),\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    defaultCanFilter = false,\n    disableFilters,\n    state: { filters },\n    dispatch,\n    autoResetFilters = true,\n  } = instance\n\n  const setFilter = React.useCallback(\n    (columnId, filterValue) => {\n      dispatch({ type: actions.setFilter, columnId, filterValue })\n    },\n    [dispatch]\n  )\n\n  const setAllFilters = React.useCallback(\n    filters => {\n      dispatch({\n        type: actions.setAllFilters,\n        filters,\n      })\n    },\n    [dispatch]\n  )\n\n  allColumns.forEach(column => {\n    const {\n      id,\n      accessor,\n      defaultCanFilter: columnDefaultCanFilter,\n      disableFilters: columnDisableFilters,\n    } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false)\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    const found = filters.find(d => d.id === id)\n    column.filterValue = found && found.value\n  })\n\n  const [\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualFilters || !filters.length) {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = filters.reduce(\n        (filteredSoFar, { id: columnId, value: filterValue }) => {\n          // Find the filters column\n          const column = allColumns.find(d => d.id === columnId)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            [columnId],\n            filterValue\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n        if (!row.subRows) {\n          return\n        }\n\n        row.subRows =\n          row.subRows && row.subRows.length > 0\n            ? filterRows(row.subRows, depth + 1)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualFilters,\n    filters,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = allColumns.filter(\n      column => !filters.find(d => d.id === column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, allColumns])\n\n  const getAutoResetFilters = useGetLatest(autoResetFilters)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetFilters()) {\n      dispatch({ type: actions.resetFilters })\n    }\n  }, [dispatch, manualFilters ? null : data])\n\n  Object.assign(instance, {\n    preFilteredRows: rows,\n    preFilteredFlatRows: flatRows,\n    preFilteredRowsById: rowsById,\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n    rowsById: filteredRowsById,\n    setFilter,\n    setAllFilters,\n  })\n}\n","import React from 'react'\n\nimport {\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n  getFirstDefined,\n} from '../utils'\n\nimport {\n  actions,\n  useMountedLayoutEffect,\n  functionalUpdate,\n  useGetLatest,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetGlobalFilter = 'resetGlobalFilter'\nactions.setGlobalFilter = 'setGlobalFilter'\n\nexport const useGlobalFilter = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseGlobalFilter.pluginName = 'useGlobalFilter'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.resetGlobalFilter) {\n    return {\n      ...state,\n      globalFilter: instance.initialState.globalFilter || undefined,\n    }\n  }\n\n  if (action.type === actions.setGlobalFilter) {\n    const { filterValue } = action\n    const { userFilterTypes } = instance\n\n    const filterMethod = getFilterMethod(\n      instance.globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const newFilter = functionalUpdate(filterValue, state.globalFilter)\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n      const { globalFilter, ...stateWithoutGlobalFilter } = state\n      return stateWithoutGlobalFilter\n    }\n\n    return {\n      ...state,\n      globalFilter: newFilter,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    globalFilter,\n    manualGlobalFilter,\n    state: { globalFilter: globalFilterValue },\n    dispatch,\n    autoResetGlobalFilter = true,\n    disableGlobalFilter,\n  } = instance\n\n  const setGlobalFilter = React.useCallback(\n    filterValue => {\n      dispatch({ type: actions.setGlobalFilter, filterValue })\n    },\n    [dispatch]\n  )\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const [\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    const filterMethod = getFilterMethod(\n      globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    if (!filterMethod) {\n      console.warn(`Could not find a valid 'globalFilter' option.`)\n      return rows\n    }\n\n    allColumns.forEach(column => {\n      const { disableGlobalFilter: columnDisableGlobalFilter } = column\n\n      column.canFilter = getFirstDefined(\n        columnDisableGlobalFilter === true ? false : undefined,\n        disableGlobalFilter === true ? false : undefined,\n        true\n      )\n    })\n\n    const filterableColumns = allColumns.filter(c => c.canFilter === true)\n\n    // Filters top level and nested rows\n    const filterRows = filteredRows => {\n      filteredRows = filterMethod(\n        filteredRows,\n        filterableColumns.map(d => d.id),\n        globalFilterValue\n      )\n\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n\n        row.subRows =\n          row.subRows && row.subRows.length\n            ? filterRows(row.subRows)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualGlobalFilter,\n    globalFilterValue,\n    globalFilter,\n    userFilterTypes,\n    allColumns,\n    rows,\n    flatRows,\n    rowsById,\n    disableGlobalFilter,\n  ])\n\n  const getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGlobalFilter()) {\n      dispatch({ type: actions.resetGlobalFilter })\n    }\n  }, [dispatch, manualGlobalFilter ? null : data])\n\n  Object.assign(instance, {\n    preGlobalFilteredRows: rows,\n    preGlobalFilteredFlatRows: flatRows,\n    preGlobalFilteredRowsById: rowsById,\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n    rows: globalFilteredRows,\n    flatRows: globalFilteredFlatRows,\n    rowsById: globalFilteredRowsById,\n    setGlobalFilter,\n    disableGlobalFilter,\n  })\n}\n","export function sum(values, aggregatedValues) {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return aggregatedValues.reduce(\n    (sum, next) => sum + (typeof next === 'number' ? next : 0),\n    0\n  )\n}\n\nexport function min(values) {\n  let min = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n    }\n  })\n\n  return min\n}\n\nexport function max(values) {\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      max = Math.max(max, value)\n    }\n  })\n\n  return max\n}\n\nexport function minMax(values) {\n  let min = values[0] || 0\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return `${min}..${max}`\n}\n\nexport function average(values) {\n  return sum(null, values) / values.length\n}\n\nexport function median(values) {\n  if (!values.length) {\n    return null\n  }\n\n  const mid = Math.floor(values.length / 2)\n  const nums = [...values].sort((a, b) => a - b)\n  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2\n}\n\nexport function unique(values) {\n  return Array.from(new Set(values).values())\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import React from 'react'\n\nimport * as aggregations from '../aggregations'\n\nimport { getFirstDefined, flattenBy } from '../utils'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst emptyArray = []\nconst emptyObject = {}\n\n// Actions\nactions.resetGroupBy = 'resetGroupBy'\nactions.setGroupBy = 'setGroupBy'\nactions.toggleGroupBy = 'toggleGroupBy'\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.groupBy,\n  ])\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nconst defaultGetGroupByToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canGroupBy\n      ? e => {\n          e.persist()\n          header.toggleGroupBy()\n        }\n      : undefined,\n    style: {\n      cursor: header.canGroupBy ? 'pointer' : undefined,\n    },\n    title: 'Toggle GroupBy',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      groupBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetGroupBy) {\n    return {\n      ...state,\n      groupBy: instance.initialState.groupBy || [],\n    }\n  }\n\n  if (action.type === actions.setGroupBy) {\n    const { value } = action\n    return {\n      ...state,\n      groupBy: value,\n    }\n  }\n\n  if (action.type === actions.toggleGroupBy) {\n    const { columnId, value: setGroupBy } = action\n\n    const resolvedGroupBy =\n      typeof setGroupBy !== 'undefined'\n        ? setGroupBy\n        : !state.groupBy.includes(columnId)\n\n    if (resolvedGroupBy) {\n      return {\n        ...state,\n        groupBy: [...state.groupBy, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      groupBy: state.groupBy.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { groupBy },\n    },\n  }\n) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy\n    .map(g => columns.find(col => col.id === g))\n    .filter(Boolean)\n\n  const nonGroupByColumns = columns.filter(col => !groupBy.includes(col.id))\n\n  columns = [...groupByColumns, ...nonGroupByColumns]\n\n  columns.forEach(column => {\n    column.isGrouped = groupBy.includes(column.id)\n    column.groupedIndex = groupBy.indexOf(column.id)\n  })\n\n  return columns\n}\n\nconst defaultUserAggregations = {}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    aggregations: userAggregations = defaultUserAggregations,\n    plugins,\n    state: { groupBy },\n    dispatch,\n    autoResetGroupBy = true,\n    disableGroupBy,\n    defaultCanGroupBy,\n    getHooks,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useColumnOrder', 'useFilters'], 'useGroupBy')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultGroupBy: defaultColumnGroupBy,\n      disableGroupBy: columnDisableGroupBy,\n    } = column\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          column.canGroupBy,\n          columnDisableGroupBy === true ? false : undefined,\n          disableGroupBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canGroupBy,\n          defaultColumnGroupBy,\n          defaultCanGroupBy,\n          false\n        )\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => instance.toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = React.useCallback(\n    (columnId, value) => {\n      dispatch({ type: actions.toggleGroupBy, columnId, value })\n    },\n    [dispatch]\n  )\n\n  const setGroupBy = React.useCallback(\n    value => {\n      dispatch({ type: actions.setGroupBy, value })\n    },\n    [dispatch]\n  )\n\n  flatHeaders.forEach(header => {\n    header.getGroupByToggleProps = makePropGetter(\n      getHooks().getGroupByToggleProps,\n      { instance: getInstance(), header }\n    )\n  })\n\n  const [\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n  ] = React.useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return [\n        rows,\n        flatRows,\n        rowsById,\n        emptyArray,\n        emptyObject,\n        flatRows,\n        rowsById,\n      ]\n    }\n\n    // Ensure that the list of filtered columns exist\n    const existingGroupBy = groupBy.filter(g =>\n      allColumns.find(col => col.id === g)\n    )\n\n    // Find the columns that can or are aggregating\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (leafRows, groupedRows, depth) => {\n      const values = {}\n\n      allColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (existingGroupBy.includes(column.id)) {\n          values[column.id] = groupedRows[0]\n            ? groupedRows[0].values[column.id]\n            : null\n          return\n        }\n\n        // Aggregate the values\n        let aggregateFn =\n          typeof column.aggregate === 'function'\n            ? column.aggregate\n            : userAggregations[column.aggregate] ||\n              aggregations[column.aggregate]\n\n        if (aggregateFn) {\n          // Get the columnValues to aggregate\n          const groupedValues = groupedRows.map(row => row.values[column.id])\n\n          // Get the columnValues to aggregate\n          const leafValues = leafRows.map(row => {\n            let columnValue = row.values[column.id]\n\n            if (!depth && column.aggregateValue) {\n              const aggregateValueFn =\n                typeof column.aggregateValue === 'function'\n                  ? column.aggregateValue\n                  : userAggregations[column.aggregateValue] ||\n                    aggregations[column.aggregateValue]\n\n              if (!aggregateValueFn) {\n                console.info({ column })\n                throw new Error(\n                  `React Table: Invalid column.aggregateValue option for column listed above`\n                )\n              }\n\n              columnValue = aggregateValueFn(columnValue, row, column)\n            }\n            return columnValue\n          })\n\n          values[column.id] = aggregateFn(leafValues, groupedValues)\n        } else if (column.aggregate) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid column.aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n\n      return values\n    }\n\n    let groupedFlatRows = []\n    const groupedRowsById = {}\n    const onlyGroupedFlatRows = []\n    const onlyGroupedRowsById = {}\n    const nonGroupedFlatRows = []\n    const nonGroupedRowsById = {}\n\n    // Recursively group the data\n    const groupUpRecursively = (rows, depth = 0, parentId) => {\n      // This is the last level, just return the rows\n      if (depth === existingGroupBy.length) {\n        return rows\n      }\n\n      const columnId = existingGroupBy[depth]\n\n      // Group the rows together for this level\n      let rowGroupsMap = groupByFn(rows, columnId)\n\n      // Peform aggregations for each group\n      const aggregatedGroupedRows = Object.entries(rowGroupsMap).map(\n        ([groupByVal, groupedRows], index) => {\n          let id = `${columnId}:${groupByVal}`\n          id = parentId ? `${parentId}>${id}` : id\n\n          // First, Recurse to group sub rows before aggregation\n          const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n          // Flatten the leaf rows of the rows in this group\n          const leafRows = depth\n            ? flattenBy(groupedRows, 'leafRows')\n            : groupedRows\n\n          const values = aggregateRowsToValues(leafRows, groupedRows, depth)\n\n          const row = {\n            id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal,\n            values,\n            subRows,\n            leafRows,\n            depth,\n            index,\n          }\n\n          subRows.forEach(subRow => {\n            groupedFlatRows.push(subRow)\n            groupedRowsById[subRow.id] = subRow\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow)\n              onlyGroupedRowsById[subRow.id] = subRow\n            } else {\n              nonGroupedFlatRows.push(subRow)\n              nonGroupedRowsById[subRow.id] = subRow\n            }\n          })\n\n          return row\n        }\n      )\n\n      return aggregatedGroupedRows\n    }\n\n    const groupedRows = groupUpRecursively(rows)\n\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow)\n      groupedRowsById[subRow.id] = subRow\n      if (subRow.isGrouped) {\n        onlyGroupedFlatRows.push(subRow)\n        onlyGroupedRowsById[subRow.id] = subRow\n      } else {\n        nonGroupedFlatRows.push(subRow)\n        nonGroupedRowsById[subRow.id] = subRow\n      }\n    })\n\n    // Assign the new data\n    return [\n      groupedRows,\n      groupedFlatRows,\n      groupedRowsById,\n      onlyGroupedFlatRows,\n      onlyGroupedRowsById,\n      nonGroupedFlatRows,\n      nonGroupedRowsById,\n    ]\n  }, [\n    manualGroupBy,\n    groupBy,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  const getAutoResetGroupBy = useGetLatest(autoResetGroupBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGroupBy()) {\n      dispatch({ type: actions.resetGroupBy })\n    }\n  }, [dispatch, manualGroupBy ? null : data])\n\n  Object.assign(instance, {\n    preGroupedRows: rows,\n    preGroupedFlatRow: flatRows,\n    preGroupedRowsById: rowsById,\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n    rows: groupedRows,\n    flatRows: groupedFlatRows,\n    rowsById: groupedRowsById,\n    toggleGroupBy,\n    setGroupBy,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the groupBy and the pivot cell for the row\n    cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n    // Placeholder cells are any columns in the groupBy that are not grouped\n    cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped\n    // Aggregated cells are not grouped, not repeated, but still have subRows\n    cell.isAggregated =\n      !cell.isGrouped && !cell.isPlaceholder && row.subRows?.length\n  })\n}\n\nexport function defaultGroupByFn(rows, columnId) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnId]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnId) => {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\nexport function datetime(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  return compareBasic(a, b)\n}\n\nexport function string(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.split('').filter(Boolean)\n  b = b.split('').filter(Boolean)\n\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    let alower = aa.toLowerCase()\n    let blower = bb.toLowerCase()\n\n    // Case insensitive comparison until characters match\n    if (alower > blower) {\n      return 1\n    }\n    if (blower > alower) {\n      return -1\n    }\n    // If lowercase characters are identical\n    if (aa > bb) {\n      return 1\n    }\n    if (bb > aa) {\n      return -1\n    }\n    continue\n  }\n\n  return a.length - b.length\n}\n\nexport function number(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  const replaceNonNumeric = /[^0-9.]/gi\n\n  a = Number(String(a).replace(replaceNonNumeric, ''))\n  b = Number(String(b).replace(replaceNonNumeric, ''))\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValuesByColumnID(row1, row2, columnId) {\n  return [row1.values[columnId], row2.values[columnId]]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\n\nimport {\n  actions,\n  ensurePluginOrder,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, isFunction } from '../utils'\n\nimport * as sortTypes from '../sortTypes'\n\n// Actions\nactions.resetSortBy = 'resetSortBy'\nactions.setSortBy = 'setSortBy'\nactions.toggleSortBy = 'toggleSortBy'\nactions.clearSortBy = 'clearSortBy'\n\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\nexport const useSortBy = hooks => {\n  hooks.getSortByToggleProps = [defaultGetSortByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nconst defaultGetSortByToggleProps = (props, { instance, column }) => {\n  const { isMultiSortEvent = e => e.shiftKey } = instance\n\n  return [\n    props,\n    {\n      onClick: column.canSort\n        ? e => {\n            e.persist()\n            column.toggleSortBy(\n              undefined,\n              !instance.disableMultiSort && isMultiSortEvent(e)\n            )\n          }\n        : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined,\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined,\n    },\n  ]\n}\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      sortBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSortBy) {\n    return {\n      ...state,\n      sortBy: instance.initialState.sortBy || [],\n    }\n  }\n\n  if (action.type === actions.clearSortBy) {\n    const { sortBy } = state\n    const newSortBy = sortBy.filter(d => d.id !== action.columnId)\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n\n  if (action.type === actions.setSortBy) {\n    const { sortBy } = action\n    return {\n      ...state,\n      sortBy,\n    }\n  }\n\n  if (action.type === actions.toggleSortBy) {\n    const { columnId, desc, multi } = action\n\n    const {\n      allColumns,\n      disableMultiSort,\n      disableSortRemove,\n      disableMultiRemove,\n      maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    } = instance\n\n    const { sortBy } = state\n\n    // Find the column for this columnId\n    const column = allColumns.find(d => d.id === columnId)\n    const { sortDescFirst } = column\n\n    // Find any existing sortBy for this column\n    const existingSortBy = sortBy.find(d => d.id === columnId)\n    const existingIndex = sortBy.findIndex(d => d.id === columnId)\n    const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n    let newSortBy = []\n\n    // What should we do with this sort action?\n    let sortAction\n\n    if (!disableMultiSort && multi) {\n      if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'add'\n      }\n    } else {\n      // Normal mode\n      if (existingIndex !== sortBy.length - 1 || sortBy.length !== 1) {\n        sortAction = 'replace'\n      } else if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'replace'\n      }\n    }\n\n    // Handle toggle states that will remove the sortBy\n    if (\n      sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && // Must not be setting desc\n      (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n      ((existingSortBy && // Finally, detect if it should indeed be removed\n        existingSortBy.desc &&\n        !sortDescFirst) ||\n        (!existingSortBy.desc && sortDescFirst))\n    ) {\n      sortAction = 'remove'\n    }\n\n    if (sortAction === 'replace') {\n      newSortBy = [\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n    } else if (sortAction === 'add') {\n      newSortBy = [\n        ...sortBy,\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n      // Take latest n columns\n      newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n    } else if (sortAction === 'toggle') {\n      // This flips (or sets) the\n      newSortBy = sortBy.map(d => {\n        if (d.id === columnId) {\n          return {\n            ...d,\n            desc: hasDescDefined ? desc : !existingSortBy.desc,\n          }\n        }\n        return d\n      })\n    } else if (sortAction === 'remove') {\n      newSortBy = sortBy.filter(d => d.id !== columnId)\n    }\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSortBy,\n    defaultCanSort,\n    disableSortBy,\n    flatHeaders,\n    state: { sortBy },\n    dispatch,\n    plugins,\n    getHooks,\n    autoResetSortBy = true,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'],\n    'useSortBy'\n  )\n\n  const setSortBy = React.useCallback(\n    sortBy => {\n      dispatch({ type: actions.setSortBy, sortBy })\n    },\n    [dispatch]\n  )\n\n  // Updates sorting based on a columnId, desc flag and multi flag\n  const toggleSortBy = React.useCallback(\n    (columnId, desc, multi) => {\n      dispatch({ type: actions.toggleSortBy, columnId, desc, multi })\n    },\n    [dispatch]\n  )\n\n  // use reference to avoid memory leak in #1608\n  const getInstance = useGetLatest(instance)\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const {\n      accessor,\n      canSort: defaultColumnCanSort,\n      disableSortBy: columnDisableSortBy,\n      id,\n    } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSortBy === true ? false : undefined,\n          disableSortBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(defaultCanSort, defaultColumnCanSort, false)\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSortBy = () => {\n        dispatch({ type: actions.clearSortBy, columnId: column.id })\n      }\n    }\n\n    column.getSortByToggleProps = makePropGetter(\n      getHooks().getSortByToggleProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const [sortedRows, sortedFlatRows] = React.useMemo(() => {\n    if (manualSortBy || !sortBy.length) {\n      return [rows, flatRows]\n    }\n\n    const sortedFlatRows = []\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      allColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id, sort.desc)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        sortedFlatRows.push(row)\n        if (!row.subRows || row.subRows.length === 0) {\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    return [sortData(rows), sortedFlatRows]\n  }, [\n    manualSortBy,\n    sortBy,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  const getAutoResetSortBy = useGetLatest(autoResetSortBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSortBy()) {\n      dispatch({ type: actions.resetSortBy })\n    }\n  }, [manualSortBy ? null : data])\n\n  Object.assign(instance, {\n    preSortedRows: rows,\n    preSortedFlatRows: flatRows,\n    sortedRows,\n    sortedFlatRows,\n    rows: sortedRows,\n    flatRows: sortedFlatRows,\n    setSortBy,\n    toggleSortBy,\n  })\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  actions,\n  ensurePluginOrder,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { expandRows } from '../utils'\n\nconst pluginName = 'usePagination'\n\n// Actions\nactions.resetPage = 'resetPage'\nactions.gotoPage = 'gotoPage'\nactions.setPageSize = 'setPageSize'\n\nexport const usePagination = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nusePagination.pluginName = pluginName\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pageSize: 10,\n      pageIndex: 0,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPage) {\n    return {\n      ...state,\n      pageIndex: instance.initialState.pageIndex || 0,\n    }\n  }\n\n  if (action.type === actions.gotoPage) {\n    const { pageCount, page } = instance\n    const newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex)\n    let canNavigate = false\n\n    if (newPageIndex > state.pageIndex) {\n      // next page\n      canNavigate =\n        pageCount === -1\n          ? page.length >= state.pageSize\n          : newPageIndex < pageCount\n    } else if (newPageIndex < state.pageIndex) {\n      // prev page\n      canNavigate = newPageIndex > -1\n    }\n\n    if (!canNavigate) {\n      return state\n    }\n\n    return {\n      ...state,\n      pageIndex: newPageIndex,\n    }\n  }\n\n  if (action.type === actions.setPageSize) {\n    const { pageSize } = action\n    const topRowIndex = state.pageSize * state.pageIndex\n    const pageIndex = Math.floor(topRowIndex / pageSize)\n\n    return {\n      ...state,\n      pageIndex,\n      pageSize,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    rows,\n    autoResetPage = true,\n    manualExpandedKey = 'expanded',\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: {\n      pageSize,\n      pageIndex,\n      expanded,\n      globalFilter,\n      filters,\n      groupBy,\n      sortBy,\n    },\n    dispatch,\n    data,\n    manualPagination,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination'\n  )\n\n  const getAutoResetPage = useGetLatest(autoResetPage)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPage()) {\n      dispatch({ type: actions.resetPage })\n    }\n  }, [\n    dispatch,\n    manualPagination ? null : data,\n    globalFilter,\n    filters,\n    groupBy,\n    sortBy,\n  ])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () =>\n      pageCount > 0\n        ? [...new Array(pageCount)].fill(null).map((d, i) => i)\n        : [],\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage =\n    pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    pageIndex => {\n      dispatch({ type: actions.gotoPage, pageIndex })\n    },\n    [dispatch]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      dispatch({ type: actions.setPageSize, pageSize })\n    },\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  })\n}\n","/* istanbul ignore file */\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { flattenColumns, getFirstDefined } from '../utils'\n\n// Actions\nactions.resetPivot = 'resetPivot'\nactions.togglePivot = 'togglePivot'\n\nexport const _UNSTABLE_usePivotColumns = hooks => {\n  hooks.getPivotToggleProps = [defaultGetPivotToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceAfterData.push(useInstanceAfterData)\n  hooks.allColumns.push(allColumns)\n  hooks.accessValue.push(accessValue)\n  hooks.materializedColumns.push(materializedColumns)\n  hooks.materializedColumnsDeps.push(materializedColumnsDeps)\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\n_UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns'\n\nconst defaultPivotColumns = []\n\nconst defaultGetPivotToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canPivot\n      ? e => {\n          e.persist()\n          header.togglePivot()\n        }\n      : undefined,\n    style: {\n      cursor: header.canPivot ? 'pointer' : undefined,\n    },\n    title: 'Toggle Pivot',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pivotColumns: defaultPivotColumns,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPivot) {\n    return {\n      ...state,\n      pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns,\n    }\n  }\n\n  if (action.type === actions.togglePivot) {\n    const { columnId, value: setPivot } = action\n\n    const resolvedPivot =\n      typeof setPivot !== 'undefined'\n        ? setPivot\n        : !state.pivotColumns.includes(columnId)\n\n    if (resolvedPivot) {\n      return {\n        ...state,\n        pivotColumns: [...state.pivotColumns, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      pivotColumns: state.pivotColumns.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction useInstanceAfterData(instance) {\n  instance.allColumns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n  })\n}\n\nfunction allColumns(columns, { instance }) {\n  columns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n    column.uniqueValues = new Set()\n  })\n  return columns\n}\n\nfunction accessValue(value, { column }) {\n  if (column.uniqueValues && typeof value !== 'undefined') {\n    column.uniqueValues.add(value)\n  }\n  return value\n}\n\nfunction materializedColumns(materialized, { instance }) {\n  const { allColumns, state } = instance\n\n  if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n    return materialized\n  }\n\n  const pivotColumns = state.pivotColumns\n    .map(id => allColumns.find(d => d.id === id))\n    .filter(Boolean)\n\n  const sourceColumns = allColumns.filter(\n    d =>\n      !d.isPivotSource &&\n      !state.groupBy.includes(d.id) &&\n      !state.pivotColumns.includes(d.id)\n  )\n\n  const buildPivotColumns = (depth = 0, parent, pivotFilters = []) => {\n    const pivotColumn = pivotColumns[depth]\n\n    if (!pivotColumn) {\n      return sourceColumns.map(sourceColumn => {\n        // TODO: We could offer support here for renesting pivoted\n        // columns inside copies of their header groups. For now,\n        // that seems like it would be (1) overkill on nesting, considering\n        // you already get nesting for every pivot level and (2)\n        // really hard. :)\n\n        return {\n          ...sourceColumn,\n          canPivot: false,\n          isPivoted: true,\n          parent,\n          depth: depth,\n          id: `${parent ? `${parent.id}.${sourceColumn.id}` : sourceColumn.id}`,\n          accessor: (originalRow, i, row) => {\n            if (pivotFilters.every(filter => filter(row))) {\n              return row.values[sourceColumn.id]\n            }\n          },\n        }\n      })\n    }\n\n    const uniqueValues = Array.from(pivotColumn.uniqueValues).sort()\n\n    return uniqueValues.map(uniqueValue => {\n      const columnGroup = {\n        ...pivotColumn,\n        Header:\n          pivotColumn.PivotHeader || typeof pivotColumn.header === 'string'\n            ? `${pivotColumn.Header}: ${uniqueValue}`\n            : uniqueValue,\n        isPivotGroup: true,\n        parent,\n        depth,\n        id: parent\n          ? `${parent.id}.${pivotColumn.id}.${uniqueValue}`\n          : `${pivotColumn.id}.${uniqueValue}`,\n        pivotValue: uniqueValue,\n      }\n\n      columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [\n        ...pivotFilters,\n        row => row.values[pivotColumn.id] === uniqueValue,\n      ])\n\n      return columnGroup\n    })\n  }\n\n  const newMaterialized = flattenColumns(buildPivotColumns())\n\n  return [...materialized, ...newMaterialized]\n}\n\nfunction materializedColumnsDeps(\n  deps,\n  {\n    instance: {\n      state: { pivotColumns, groupBy },\n    },\n  }\n) {\n  return [...deps, pivotColumns, groupBy]\n}\n\nfunction visibleColumns(visibleColumns, { instance: { state } }) {\n  visibleColumns = visibleColumns.filter(d => !d.isPivotSource)\n\n  if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n    visibleColumns = visibleColumns.filter(\n      column => column.isGrouped || column.isPivoted\n    )\n  }\n\n  return visibleColumns\n}\n\nfunction visibleColumnsDeps(deps, { instance }) {\n  return [...deps, instance.state.pivotColumns, instance.state.groupBy]\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    allColumns,\n    flatHeaders,\n    // pivotFn = defaultPivotFn,\n    // manualPivot,\n    getHooks,\n    plugins,\n    dispatch,\n    autoResetPivot = true,\n    manaulPivot,\n    disablePivot,\n    defaultCanPivot,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultPivot: defaultColumnPivot,\n      disablePivot: columnDisablePivot,\n    } = column\n\n    column.canPivot = accessor\n      ? getFirstDefined(\n          column.canPivot,\n          columnDisablePivot === true ? false : undefined,\n          disablePivot === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canPivot,\n          defaultColumnPivot,\n          defaultCanPivot,\n          false\n        )\n\n    if (column.canPivot) {\n      column.togglePivot = () => instance.togglePivot(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const togglePivot = (columnId, value) => {\n    dispatch({ type: actions.togglePivot, columnId, value })\n  }\n\n  flatHeaders.forEach(header => {\n    header.getPivotToggleProps = makePropGetter(\n      getHooks().getPivotToggleProps,\n      {\n        instance: getInstance(),\n        header,\n      }\n    )\n  })\n\n  const getAutoResetPivot = useGetLatest(autoResetPivot)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPivot()) {\n      dispatch({ type: actions.resetPivot })\n    }\n  }, [dispatch, manaulPivot ? null : columns])\n\n  Object.assign(instance, {\n    togglePivot,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the pivotColumns and the pivot cell for the row\n    cell.isPivoted = cell.column.isPivoted\n  })\n}\n","import React from 'react'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nconst pluginName = 'useRowSelect'\n\n// Actions\nactions.resetSelectedRows = 'resetSelectedRows'\nactions.toggleAllRowsSelected = 'toggleAllRowsSelected'\nactions.toggleRowSelected = 'toggleRowSelected'\nactions.toggleAllPageRowsSelected = 'toggleAllPageRowsSelected'\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps]\n  hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps]\n  hooks.getToggleAllPageRowsSelectedProps = [\n    defaultGetToggleAllPageRowsSelectedProps,\n  ]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowSelect.pluginName = pluginName\n\nconst defaultGetToggleRowSelectedProps = (props, { instance, row }) => {\n  const { manualRowSelectedKey = 'isSelected' } = instance\n  let checked = false\n\n  if (row.original && row.original[manualRowSelectedKey]) {\n    checked = true\n  } else {\n    checked = row.isSelected\n  }\n\n  return [\n    props,\n    {\n      onChange: e => {\n        row.toggleRowSelected(e.target.checked)\n      },\n      style: {\n        cursor: 'pointer',\n      },\n      checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected,\n    },\n  ]\n}\n\nconst defaultGetToggleAllRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleAllRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllRowsSelected,\n    title: 'Toggle All Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllRowsSelected &&\n        Object.keys(instance.state.selectedRowIds).length\n    ),\n  },\n]\n\nconst defaultGetToggleAllPageRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange(e) {\n      instance.toggleAllPageRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllPageRowsSelected,\n    title: 'Toggle All Current Page Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllPageRowsSelected &&\n        instance.page.some(({ id }) => instance.state.selectedRowIds[id])\n    ),\n  },\n]\n\n// eslint-disable-next-line max-params\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      selectedRowIds: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSelectedRows) {\n    return {\n      ...state,\n      selectedRowIds: instance.initialState.selectedRowIds || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      isAllRowsSelected,\n      rowsById,\n      nonGroupedRowsById = rowsById,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected\n\n    // Only remove/add the rows that are visible on the screen\n    //  Leave all the other rows that are selected alone.\n    const selectedRowIds = Object.assign({}, state.selectedRowIds)\n\n    if (selectAll) {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        selectedRowIds[rowId] = true\n      })\n    } else {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        delete selectedRowIds[rowId]\n      })\n    }\n\n    return {\n      ...state,\n      selectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleRowSelected) {\n    const { id, value: setSelected } = action\n    const { rowsById, selectSubRows = true, getSubRows } = instance\n    const isSelected = state.selectedRowIds[id]\n    const shouldExist =\n      typeof setSelected !== 'undefined' ? setSelected : !isSelected\n\n    if (isSelected === shouldExist) {\n      return state\n    }\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (shouldExist) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    handleRowById(id)\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleAllPageRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      page,\n      rowsById,\n      selectSubRows = true,\n      isAllPageRowsSelected,\n      getSubRows,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllPageRowsSelected\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (selectAll) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    page.forEach(row => handleRowById(row.id))\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n  return state\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    getHooks,\n    plugins,\n    rowsById,\n    nonGroupedRowsById = rowsById,\n    autoResetSelectedRows = true,\n    state: { selectedRowIds },\n    selectSubRows = true,\n    dispatch,\n    page,\n    getSubRows,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy', 'useExpanded', 'usePagination'],\n    'useRowSelect'\n  )\n\n  const selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n\n    rows.forEach(row => {\n      const isSelected = selectSubRows\n        ? getRowIsSelected(row, selectedRowIds, getSubRows)\n        : !!selectedRowIds[row.id]\n      row.isSelected = !!isSelected\n      row.isSomeSelected = isSelected === null\n\n      if (isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectSubRows, selectedRowIds, getSubRows])\n\n  let isAllRowsSelected = Boolean(\n    Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length\n  )\n\n  let isAllPageRowsSelected = isAllRowsSelected\n\n  if (isAllRowsSelected) {\n    if (Object.keys(nonGroupedRowsById).some(id => !selectedRowIds[id])) {\n      isAllRowsSelected = false\n    }\n  }\n\n  if (!isAllRowsSelected) {\n    if (page && page.length && page.some(({ id }) => !selectedRowIds[id])) {\n      isAllPageRowsSelected = false\n    }\n  }\n\n  const getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSelectedRows()) {\n      dispatch({ type: actions.resetSelectedRows })\n    }\n  }, [dispatch, data])\n\n  const toggleAllRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleAllPageRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllPageRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleRowSelected = React.useCallback(\n    (id, value) => dispatch({ type: actions.toggleRowSelected, id, value }),\n    [dispatch]\n  )\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  const getToggleAllPageRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllPageRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    selectedFlatRows,\n    isAllRowsSelected,\n    isAllPageRowsSelected,\n    toggleRowSelected,\n    toggleAllRowsSelected,\n    getToggleAllRowsSelectedProps,\n    getToggleAllPageRowsSelectedProps,\n    toggleAllPageRowsSelected,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  row.toggleRowSelected = set => instance.toggleRowSelected(row.id, set)\n\n  row.getToggleRowSelectedProps = makePropGetter(\n    instance.getHooks().getToggleRowSelectedProps,\n    { instance: instance, row }\n  )\n}\n\nfunction getRowIsSelected(row, selectedRowIds, getSubRows) {\n  if (selectedRowIds[row.id]) {\n    return true\n  }\n\n  const subRows = getSubRows(row)\n\n  if (subRows && subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (getRowIsSelected(subRow, selectedRowIds, getSubRows)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n    return allChildrenSelected ? true : someSelected ? null : false\n  }\n\n  return false\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst defaultInitialRowStateAccessor = row => ({})\nconst defaultInitialCellStateAccessor = cell => ({})\n\n// Actions\nactions.setRowState = 'setRowState'\nactions.setCellState = 'setCellState'\nactions.resetRowState = 'resetRowState'\n\nexport const useRowState = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction reducer(state, action, previousState, instance) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    rowsById,\n  } = instance\n\n  if (action.type === actions.init) {\n    return {\n      rowState: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetRowState) {\n    return {\n      ...state,\n      rowState: instance.initialState.rowState || {},\n    }\n  }\n\n  if (action.type === actions.setRowState) {\n    const { rowId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: functionalUpdate(value, oldRowState),\n      },\n    }\n  }\n\n  if (action.type === actions.setCellState) {\n    const { rowId, columnId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    const oldCellState =\n      typeof oldRowState?.cellState?.[columnId] !== 'undefined'\n        ? oldRowState.cellState[columnId]\n        : initialCellStateAccessor(\n            rowsById[rowId]?.cells?.find(cell => cell.column.id === columnId)\n          )\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: {\n          ...oldRowState,\n          cellState: {\n            ...(oldRowState.cellState || {}),\n            [columnId]: functionalUpdate(value, oldCellState),\n          },\n        },\n      },\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const { autoResetRowState = true, data, dispatch } = instance\n\n  const setRowState = React.useCallback(\n    (rowId, value) =>\n      dispatch({\n        type: actions.setRowState,\n        rowId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const setCellState = React.useCallback(\n    (rowId, columnId, value) =>\n      dispatch({\n        type: actions.setCellState,\n        rowId,\n        columnId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const getAutoResetRowState = useGetLatest(autoResetRowState)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetRowState()) {\n      dispatch({ type: actions.resetRowState })\n    }\n  }, [data])\n\n  Object.assign(instance, {\n    setRowState,\n    setCellState,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    state: { rowState },\n  } = instance\n\n  if (row) {\n    row.state =\n      typeof rowState[row.id] !== 'undefined'\n        ? rowState[row.id]\n        : initialRowStateAccessor(row)\n\n    row.setState = updater => {\n      return instance.setRowState(row.id, updater)\n    }\n\n    row.cells.forEach(cell => {\n      if (!row.state.cellState) {\n        row.state.cellState = {}\n      }\n\n      cell.state =\n        typeof row.state.cellState[cell.column.id] !== 'undefined'\n          ? row.state.cellState[cell.column.id]\n          : initialCellStateAccessor(cell)\n\n      cell.setState = updater => {\n        return instance.setCellState(row.id, cell.column.id, updater)\n      }\n    })\n  }\n}\n","import React from 'react'\n\nimport { functionalUpdate, actions } from '../publicUtils'\n\n// Actions\nactions.resetColumnOrder = 'resetColumnOrder'\nactions.setColumnOrder = 'setColumnOrder'\n\nexport const useColumnOrder = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetColumnOrder) {\n    return {\n      ...state,\n      columnOrder: instance.initialState.columnOrder || [],\n    }\n  }\n\n  if (action.type === actions.setColumnOrder) {\n    return {\n      ...state,\n      columnOrder: functionalUpdate(action.columnOrder, state.columnOrder),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { columnOrder },\n    },\n  }\n) {\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnId = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useInstance(instance) {\n  const { dispatch } = instance\n\n  instance.setColumnOrder = React.useCallback(\n    columnOrder => {\n      return dispatch({ type: actions.setColumnOrder, columnOrder })\n    },\n    [dispatch]\n  )\n}\n","import React from 'react'\n\nimport {\n  actions,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, passiveEventSupported } from '../utils'\n\n// Default Column\ndefaultColumn.canResize = true\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = [defaultGetResizerProps]\n  hooks.getHeaderProps.push({\n    style: {\n      position: 'relative',\n    },\n  })\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n}\n\nconst defaultGetResizerProps = (props, { instance, header }) => {\n  const { dispatch } = instance\n\n  const onResizeStart = (e, header) => {\n    let isTouchEvent = false\n    if (e.type === 'touchstart') {\n      // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n      if (e.touches && e.touches.length > 1) {\n        return\n      }\n      isTouchEvent = true\n    }\n    const headersToResize = getLeafHeaders(header)\n    const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth])\n\n    const clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX\n\n    const dispatchMove = clientXPos => {\n      dispatch({ type: actions.columnResizing, clientX: clientXPos })\n    }\n    const dispatchEnd = () => dispatch({ type: actions.columnDoneResizing })\n\n    const handlersAndEvents = {\n      mouse: {\n        moveEvent: 'mousemove',\n        moveHandler: e => dispatchMove(e.clientX),\n        upEvent: 'mouseup',\n        upHandler: e => {\n          document.removeEventListener(\n            'mousemove',\n            handlersAndEvents.mouse.moveHandler\n          )\n          document.removeEventListener(\n            'mouseup',\n            handlersAndEvents.mouse.upHandler\n          )\n          dispatchEnd()\n        },\n      },\n      touch: {\n        moveEvent: 'touchmove',\n        moveHandler: e => {\n          if (e.cancelable) {\n            e.preventDefault()\n            e.stopPropagation()\n          }\n          dispatchMove(e.touches[0].clientX)\n          return false\n        },\n        upEvent: 'touchend',\n        upHandler: e => {\n          document.removeEventListener(\n            handlersAndEvents.touch.moveEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          document.removeEventListener(\n            handlersAndEvents.touch.upEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          dispatchEnd()\n        },\n      },\n    }\n\n    const events = isTouchEvent\n      ? handlersAndEvents.touch\n      : handlersAndEvents.mouse\n    const passiveIfSupported = passiveEventSupported()\n      ? { passive: false }\n      : false\n    document.addEventListener(\n      events.moveEvent,\n      events.moveHandler,\n      passiveIfSupported\n    )\n    document.addEventListener(\n      events.upEvent,\n      events.upHandler,\n      passiveIfSupported\n    )\n\n    dispatch({\n      type: actions.columnStartResizing,\n      columnId: header.id,\n      columnWidth: header.totalWidth,\n      headerIdWidths,\n      clientX,\n    })\n  }\n\n  return [\n    props,\n    {\n      onMouseDown: e => e.persist() || onResizeStart(e, header),\n      onTouchStart: e => e.persist() || onResizeStart(e, header),\n      style: {\n        cursor: 'col-resize',\n      },\n      draggable: false,\n      role: 'separator',\n    },\n  ]\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nfunction reducer(state, action) {\n  if (action.type === actions.init) {\n    return {\n      columnResizing: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      columnResizing: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { clientX, columnId, columnWidth, headerIdWidths } = action\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: clientX,\n        headerIdWidths,\n        columnWidth,\n        isResizingColumn: columnId,\n      },\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX, columnWidth, headerIdWidths = [] } = state.columnResizing\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(\n        headerWidth + headerWidth * percentageDeltaX,\n        0\n      )\n    })\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        columnWidths: {\n          ...state.columnResizing.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: null,\n        isResizingColumn: null,\n      },\n    }\n  }\n}\n\nconst useInstanceBeforeDimensions = instance => {\n  const {\n    flatHeaders,\n    disableResizing,\n    getHooks,\n    state: { columnResizing },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width =\n      columnResizing.columnWidths[header.id] ||\n      header.originalWidth ||\n      header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n        instance: getInstance(),\n        header,\n      })\n    }\n  })\n}\n\nfunction useInstance(instance) {\n  const { plugins, dispatch, autoResetResize = true, columns } = instance\n\n  ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns')\n\n  const getAutoResetResize = useGetLatest(autoResetResize)\n  useMountedLayoutEffect(() => {\n    if (getAutoResetResize()) {\n      dispatch({ type: actions.resetResize })\n    }\n  }, [columns])\n\n  const resetResizing = React.useCallback(\n    () => dispatch({ type: actions.resetResize }),\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    resetResizing,\n  })\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","const cellStyles = {\n  position: 'absolute',\n  top: 0,\n}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.getTableBodyProps.push(getRowStyles)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      position: 'relative',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n","const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n","export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n  hooks.getFooterProps.push(getFooterProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n\nconst getFooterProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n","export function useGridLayout(hooks) {\n  hooks.stateReducers.push(reducer)\n  hooks.getTableProps.push(getTableProps)\n  hooks.getHeaderProps.push(getHeaderProps)\n}\n\nuseGridLayout.pluginName = 'useGridLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: `grid`,\n      gridTemplateColumns: instance.state.gridLayout.columnWidths.map(w => w).join(` `),\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    id: `header-cell-${column.id}`,\n    style: {\n      position: `sticky` //enables a scroll wrapper to be placed around the table and have sticky headers\n    },\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === `init`) {\n    return {\n      gridLayout: {\n        columnWidths: instance.columns.map(() => `auto`),\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === `columnStartResizing`) {\n    const { columnId } = action\n    const columnIndex = instance.visibleColumns.findIndex(col => col.id === columnId)\n    const elWidth = getElementWidth(columnId)\n\n    if (elWidth !== undefined) {\n      return {\n        ...state,\n        gridLayout: {\n          ...state.gridLayout,\n          columnId,\n          columnIndex,\n          startingWidth: elWidth\n        },\n      }\n    } else {\n      return state\n    }\n  }\n\n  if (action.type === `columnResizing`) {\n    const {\n      columnIndex,\n      startingWidth,\n      columnWidths,\n    } = state.gridLayout\n\n    const change = state.columnResizing.startX - action.clientX\n    const newWidth = startingWidth - change\n    const columnWidthsCopy = [...columnWidths]\n    columnWidthsCopy[columnIndex] = `${newWidth}px`\n\n    return {\n      ...state,\n      gridLayout: {\n        ...state.gridLayout,\n        columnWidths: columnWidthsCopy,\n      },\n    }\n  }\n}\n\nfunction getElementWidth(columnId) {\n  const width = document.getElementById(`header-cell-${columnId}`)?.offsetWidth\n\n  if (width !== undefined) {\n    return width\n  }\n}"],"sourceRoot":""}