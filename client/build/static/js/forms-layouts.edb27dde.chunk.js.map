{"version":3,"sources":["containers/navs/Greeting.js","views/app/ui/forms/layouts.js","components/common/CustomSelectInput.js","../node_modules/reactstrap/es/FormText.js"],"names":["getMenuTitle","time","Date","getHours","user","window","localStorage","getItem","Greeting","selectData","label","value","key","injectIntl","match","intl","useState","selectedOptionLO","setSelectedOptionLO","selectedOptionLT","setSelectedOptionLT","startDateLO","setStartDateLO","startDateLT","setStartDateLT","tagsLO","setTagsLO","tagsLT","setTagsLT","messages","xxs","heading","className","id","for","type","name","placeholder","color","row","sm","check","disabled","onChange","val","inputProps","selected","components","Input","CustomSelectInput","classNamePrefix","options","shouldCloseOnSelect","props","customProps","autoCorrect","autoCapitalize","propTypes","children","PropTypes","node","inline","bool","tag","tagPropType","string","cssModule","object","FormText","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/forms-layouts.edb27dde.chunk.js","sourcesContent":["/* eslint no-nested-ternary: 0 */\r\nimport React from 'react';\r\n\r\nconst getMenuTitle = () => {\r\n  const d = new Date();\r\n  const time = d.getHours();\r\n\r\n  const user = window.localStorage.getItem('user');\r\n\r\n  if (time < 12) {\r\n    return `Good morning, ${user === 'admin' ? 'Admin' : user === 'teacher' ? 'Teacher' : 'Student'}`;\r\n  }\r\n  if (time >= 12 && time < 16) {\r\n    return `Good afternoon, ${user === 'admin' ? 'Admin' : user === 'teacher' ? 'Teacher' : 'Student'}`;\r\n  }\r\n  return `Good evening, ${user === 'admin' ? 'Admin' : user === 'teacher' ? 'Teacher' : 'Student'}`;\r\n};\r\n\r\nconst Greeting = () => {\r\n  return <h1>{getMenuTitle()}</h1>;\r\n};\r\n\r\nexport default Greeting;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  CardTitle,\r\n  FormGroup,\r\n  Label,\r\n  CustomInput,\r\n  Button,\r\n  FormText,\r\n  Form,\r\n} from 'reactstrap';\r\nimport { injectIntl } from 'react-intl';\r\n\r\nimport DatePicker from 'react-datepicker';\r\nimport TagsInput from 'react-tagsinput';\r\n\r\nimport 'react-tagsinput/react-tagsinput.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport 'rc-switch/assets/index.css';\r\nimport 'rc-slider/assets/index.css';\r\nimport 'react-rater/lib/react-rater.css';\r\n\r\nimport Select from 'react-select';\r\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\r\nimport Breadcrumb from 'containers/navs/Greeting';\r\n\r\nimport IntlMessages from 'helpers/IntlMessages';\r\nimport CustomSelectInput from 'components/common/CustomSelectInput';\r\n\r\nconst selectData = [\r\n  { label: 'Cake', value: 'cake', key: 0 },\r\n  { label: 'Cupcake', value: 'cupcake', key: 1 },\r\n  { label: 'Dessert', value: 'dessert', key: 2 },\r\n];\r\n\r\nconst FormLayoutsUi = ({ match, intl }) => {\r\n  const [selectedOptionLO, setSelectedOptionLO] = useState('');\r\n  const [selectedOptionLT, setSelectedOptionLT] = useState('');\r\n  const [startDateLO, setStartDateLO] = useState(null);\r\n  const [startDateLT, setStartDateLT] = useState(null);\r\n  const [tagsLO, setTagsLO] = useState([]);\r\n  const [tagsLT, setTagsLT] = useState([]);\r\n\r\n  const { messages } = intl;\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Colxx xxs=\"12\">\r\n          <Breadcrumb heading=\"menu.form-layouts\" match={match} />\r\n          <Separator className=\"mb-5\" />\r\n        </Colxx>\r\n      </Row>\r\n      <Row className=\"mb-4\">\r\n        <Colxx xxs=\"12\">\r\n          <Card>\r\n            <CardBody>\r\n              <CardTitle>\r\n                <IntlMessages id=\"forms.basic\" />\r\n              </CardTitle>\r\n              <Form>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\">\r\n                    <IntlMessages id=\"forms.email\" />\r\n                  </Label>\r\n                  <Input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    id=\"exampleEmail\"\r\n                    placeholder={messages['forms.email']}\r\n                  />\r\n                  <FormText color=\"muted\">\r\n                    <IntlMessages id=\"forms.email-muted\" />\r\n                  </FormText>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                  <Label for=\"passwordBasic\">\r\n                    <IntlMessages id=\"forms.password\" />\r\n                  </Label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    name=\"passwordBasic\"\r\n                    id=\"passwordBasic\"\r\n                    placeholder={messages['forms.password']}\r\n                  />\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                  <CustomInput\r\n                    type=\"checkbox\"\r\n                    id=\"exampleCustomCheckbox\"\r\n                    label=\"Check this custom checkbox\"\r\n                  />\r\n                </FormGroup>\r\n\r\n                <Button color=\"primary\" className=\"mt-4\">\r\n                  <IntlMessages id=\"forms.submit\" />\r\n                </Button>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Colxx>\r\n      </Row>\r\n\r\n      <Row className=\"mb-4\">\r\n        <Colxx xxs=\"12\">\r\n          <Card>\r\n            <CardBody>\r\n              <CardTitle>\r\n                <IntlMessages id=\"forms.horizontal\" />\r\n              </CardTitle>\r\n              <Form>\r\n                <FormGroup row>\r\n                  <Label for=\"emailHorizontal\" sm={2}>\r\n                    <IntlMessages id=\"forms.email\" />\r\n                  </Label>\r\n                  <Colxx sm={10}>\r\n                    <Input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      id=\"emailHorizontal\"\r\n                      placeholder={messages['forms.email']}\r\n                    />\r\n                  </Colxx>\r\n                </FormGroup>\r\n\r\n                <FormGroup row>\r\n                  <Label for=\"passwordHorizontal\" sm={2}>\r\n                    <IntlMessages id=\"forms.password\" />\r\n                  </Label>\r\n                  <Colxx sm={10}>\r\n                    <Input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"passwordHorizontal\"\r\n                      placeholder={messages['forms.password']}\r\n                    />\r\n                  </Colxx>\r\n                </FormGroup>\r\n\r\n                <FormGroup row>\r\n                  <Label sm={2} className=\"pt-0\">\r\n                    <IntlMessages id=\"forms.radios\" />\r\n                  </Label>\r\n                  <Colxx sm={10}>\r\n                    <FormGroup check>\r\n                      <Label check>\r\n                        <Input type=\"radio\" name=\"radio1\" />\r\n                        <IntlMessages id=\"forms.first-radio\" />\r\n                      </Label>\r\n                    </FormGroup>\r\n                    <FormGroup check>\r\n                      <Label check>\r\n                        <Input type=\"radio\" name=\"radio1\" />\r\n                        <IntlMessages id=\"forms.second-radio\" />\r\n                      </Label>\r\n                    </FormGroup>\r\n                    <FormGroup check disabled>\r\n                      <Label check>\r\n                        <Input type=\"radio\" name=\"radio1\" disabled />\r\n                        <IntlMessages id=\"forms.third-radio-disabled\" />\r\n                      </Label>\r\n                    </FormGroup>\r\n                  </Colxx>\r\n                </FormGroup>\r\n\r\n                <FormGroup row>\r\n                  <Label sm={2} className=\"pt-0\">\r\n                    <IntlMessages id=\"forms.checkbox\" />\r\n                  </Label>\r\n                  <Colxx sm={10}>\r\n                    <FormGroup check>\r\n                      <Label check>\r\n                        <Input type=\"checkbox\" name=\"check1\" /> Example\r\n                        <IntlMessages id=\"forms.checkbox\" />\r\n                      </Label>\r\n                    </FormGroup>\r\n                  </Colxx>\r\n                </FormGroup>\r\n\r\n                <Button color=\"primary\">\r\n                  <IntlMessages id=\"forms.signin\" />\r\n                </Button>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Colxx>\r\n      </Row>\r\n\r\n      <Row className=\"mb-4\">\r\n        <Colxx xxs=\"12\">\r\n          <Card>\r\n            <CardBody>\r\n              <CardTitle>\r\n                <IntlMessages id=\"forms.top-labels-over-line\" />\r\n              </CardTitle>\r\n\r\n              <Form>\r\n                <Label className=\"form-group has-float-label\">\r\n                  <Input type=\"email\" />\r\n                  <span>\r\n                    <IntlMessages id=\"forms.email\" />\r\n                  </span>\r\n                </Label>\r\n                <Label className=\"form-group has-float-label\">\r\n                  <Input type=\"password\" />\r\n                  <span>\r\n                    <IntlMessages id=\"forms.password\" />\r\n                  </span>\r\n                </Label>\r\n                <div className=\"form-group has-float-label\">\r\n                  <TagsInput\r\n                    value={tagsLO}\r\n                    onChange={(val) => setTagsLO(val)}\r\n                    inputProps={{ placeholder: '' }}\r\n                  />\r\n                  <span>\r\n                    <IntlMessages id=\"forms.tags\" />\r\n                  </span>\r\n                </div>\r\n                <div className=\"form-group has-float-label\">\r\n                  <DatePicker\r\n                    selected={startDateLO}\r\n                    onChange={(val) => setStartDateLO(val)}\r\n                  />\r\n                  <span>\r\n                    <IntlMessages id=\"forms.date\" />\r\n                  </span>\r\n                </div>\r\n\r\n                <div className=\"form-group has-float-label\">\r\n                  <Select\r\n                    components={{ Input: CustomSelectInput }}\r\n                    className=\"react-select\"\r\n                    classNamePrefix=\"react-select\"\r\n                    name=\"form-field-name\"\r\n                    value={selectedOptionLO}\r\n                    onChange={(val) => setSelectedOptionLO(val)}\r\n                    options={selectData}\r\n                    placeholder=\"\"\r\n                  />\r\n                  <span>\r\n                    <IntlMessages id=\"forms.state\" />\r\n                  </span>\r\n                </div>\r\n\r\n                <Button color=\"primary\">\r\n                  <IntlMessages id=\"forms.submit\" />\r\n                </Button>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Colxx>\r\n      </Row>\r\n\r\n      <Row className=\"mb-4\">\r\n        <Colxx xxs=\"12\">\r\n          <Card>\r\n            <CardBody>\r\n              <CardTitle>\r\n                <IntlMessages id=\"forms.top-labels-in-input\" />\r\n              </CardTitle>\r\n\r\n              <Form>\r\n                <FormGroup className=\"form-group has-top-label\">\r\n                  <Label>\r\n                    <IntlMessages id=\"forms.email-u\" />\r\n                  </Label>\r\n                  <Input type=\"email\" />\r\n                </FormGroup>\r\n\r\n                <FormGroup className=\"form-group has-top-label\">\r\n                  <Label>\r\n                    <IntlMessages id=\"forms.password-u\" />\r\n                  </Label>\r\n\r\n                  <Input type=\"password\" />\r\n                </FormGroup>\r\n\r\n                <FormGroup className=\"form-group has-top-label\">\r\n                  <Label>\r\n                    <IntlMessages id=\"forms.tags-u\" />\r\n                  </Label>\r\n                  <TagsInput\r\n                    value={tagsLT}\r\n                    onChange={(val) => setTagsLT(val)}\r\n                    inputProps={{ placeholder: '' }}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup className=\"form-group has-top-label\">\r\n                  <Label>\r\n                    <IntlMessages id=\"forms.date-u\" />\r\n                  </Label>\r\n                  <DatePicker\r\n                    shouldCloseOnSelect\r\n                    selected={startDateLT}\r\n                    onChange={(val) => setStartDateLT(val)}\r\n                  />\r\n                </FormGroup>\r\n\r\n                <FormGroup className=\"form-group has-top-label\">\r\n                  <Label>\r\n                    <IntlMessages id=\"forms.state-u\" />\r\n                  </Label>\r\n                  <Select\r\n                    components={{ Input: CustomSelectInput }}\r\n                    className=\"react-select\"\r\n                    classNamePrefix=\"react-select\"\r\n                    name=\"form-field-name\"\r\n                    value={selectedOptionLT}\r\n                    onChange={(val) => setSelectedOptionLT(val)}\r\n                    options={selectData}\r\n                    placeholder=\"\"\r\n                  />\r\n                </FormGroup>\r\n\r\n                <Button color=\"primary\">\r\n                  <IntlMessages id=\"forms.submit\" />\r\n                </Button>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Colxx>\r\n      </Row>\r\n\r\n      <Row className=\"mb-4\">\r\n        <Colxx xxs=\"12\">\r\n          <Card>\r\n            <CardBody>\r\n              <CardTitle>\r\n                <IntlMessages id=\"forms.grid\" />\r\n              </CardTitle>\r\n              <Form>\r\n                <FormGroup row>\r\n                  <Colxx sm={6}>\r\n                    <FormGroup>\r\n                      <Label for=\"exampleEmailGrid\">\r\n                        <IntlMessages id=\"forms.email\" />\r\n                      </Label>\r\n                      <Input\r\n                        type=\"email\"\r\n                        name=\"exampleEmailGrid\"\r\n                        id=\"exampleEmailGrid\"\r\n                        placeholder={messages['forms.email']}\r\n                      />\r\n                    </FormGroup>\r\n                  </Colxx>\r\n\r\n                  <Colxx sm={6}>\r\n                    <FormGroup>\r\n                      <Label for=\"examplePasswordGrid\">\r\n                        <IntlMessages id=\"forms.password\" />\r\n                      </Label>\r\n                      <Input\r\n                        type=\"password\"\r\n                        name=\"examplePasswordGrid\"\r\n                        id=\"examplePasswordGrid\"\r\n                        placeholder={messages['forms.password']}\r\n                      />\r\n                    </FormGroup>\r\n                  </Colxx>\r\n\r\n                  <Colxx sm={12}>\r\n                    <FormGroup>\r\n                      <Label for=\"exampleAddressGrid\">\r\n                        <IntlMessages id=\"forms.address\" />\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"exampleAddressGrid\"\r\n                        id=\"exampleAddressGrid\"\r\n                        placeholder={messages['forms.address']}\r\n                      />\r\n                    </FormGroup>\r\n                  </Colxx>\r\n\r\n                  <Colxx sm={12}>\r\n                    <FormGroup>\r\n                      <Label for=\"exampleAddress2Grid\">\r\n                        <IntlMessages id=\"forms.address2\" />\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"exampleAddress2Grid\"\r\n                        id=\"exampleAddress2Grid\"\r\n                        placeholder={messages['forms.address']}\r\n                      />\r\n                    </FormGroup>\r\n                  </Colxx>\r\n\r\n                  <Colxx sm={6}>\r\n                    <FormGroup>\r\n                      <Label for=\"exampleEmailGrid\">\r\n                        <IntlMessages id=\"forms.city\" />\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"exampleTextGrid\"\r\n                        id=\"exampleTextGrid\"\r\n                        placeholder={messages['forms.city']}\r\n                      />\r\n                    </FormGroup>\r\n                  </Colxx>\r\n\r\n                  <Colxx sm={4}>\r\n                    <FormGroup>\r\n                      <Label>\r\n                        <IntlMessages id=\"forms.state\" />\r\n                      </Label>\r\n                      <Input type=\"select\">\r\n                        <option>Option 1</option>\r\n                        <option>Option 2</option>\r\n                        <option>Option 3</option>\r\n                        <option>Option 4</option>\r\n                        <option>Option 5</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </Colxx>\r\n\r\n                  <Colxx sm={2}>\r\n                    <FormGroup>\r\n                      <Label for=\"exampleZipGrid\">\r\n                        <IntlMessages id=\"forms.zip\" />\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"exampleZipGrid\"\r\n                        id=\"exampleZipGrid\"\r\n                        placeholder={messages['forms.zip']}\r\n                      />\r\n                    </FormGroup>\r\n                  </Colxx>\r\n                </FormGroup>\r\n\r\n                <Button color=\"primary\">\r\n                  <IntlMessages id=\"forms.signup\" />\r\n                </Button>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Colxx>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default injectIntl(FormLayoutsUi);\r\n","import React from 'react';\r\nimport { components } from 'react-select';\r\n\r\nconst CustomSelectInput = (props) => {\r\n  const customProps = { ...props };\r\n  delete customProps.autoCorrect;\r\n  delete customProps.autoCapitalize;\r\n  return <components.Input {...customProps} />;\r\n};\r\n\r\nexport default CustomSelectInput;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'small',\n  color: 'muted'\n};\n\nvar FormText = function FormText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      inline = props.inline,\n      color = props.color,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"inline\", \"color\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, !inline ? 'form-text' : false, color ? \"text-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormText.propTypes = propTypes;\nFormText.defaultProps = defaultProps;\nexport default FormText;"],"sourceRoot":""}