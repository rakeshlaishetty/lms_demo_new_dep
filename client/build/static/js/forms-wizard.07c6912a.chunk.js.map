{"version":3,"sources":["containers/navs/Greeting.js","components/wizard/BottomNavigation.js","components/wizard/TopNavigation.js","containers/wizard/Basic.js","containers/wizard/LastStepEnd.js","containers/wizard/TopNavDisabled.js","containers/wizard/Validation.js","containers/wizard/Layouts.js","views/app/ui/forms/wizard.js"],"names":["getMenuTitle","time","Date","getHours","user","window","localStorage","getItem","Greeting","BottomNavigation","className","onClickPrev","prevLabel","onClickNext","nextLabel","render","next","previous","step","steps","Button","color","indexOf","onClick","length","TopNavigation","disableNav","topNavClick","getClassName","index","stepItem","isDone","push","go","map","hideTopNav","to","location","itemClick","name","desc","injectIntl","intl","useState","setName","email","setEmail","password","setPassword","messages","Card","CardBody","id","Form","FormGroup","Label","IntlMessages","Input","type","placeholder","value","onChange","e","target","goToNext","goToPrev","bottomNavHidden","setBottomNavHidden","topNavDisabled","setTopNavDisabled","validateEmail","error","test","validateName","validatePassword","forms","createRef","loading","setLoading","fields","setFields","innerRef","initialValues","validateOnMount","onSubmit","errors","touched","validate","Spinner","formIndex","form","current","submitForm","then","isDirty","isValid","newFields","values","console","log","setTimeout","Row","xxs","xl","FormWizard","match","heading"],"mappings":"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","file":"static/js/forms-wizard.07c6912a.chunk.js","sourcesContent":["/* eslint no-nested-ternary: 0 */\r\nimport React from 'react';\r\n\r\nconst getMenuTitle = () => {\r\n  const d = new Date();\r\n  const time = d.getHours();\r\n\r\n  const user = window.localStorage.getItem('user');\r\n\r\n  if (time < 12) {\r\n    return `Good morning, ${user === 'admin' ? 'Admin' : user === 'teacher' ? 'Teacher' : 'Student'}`;\r\n  }\r\n  if (time >= 12 && time < 16) {\r\n    return `Good afternoon, ${user === 'admin' ? 'Admin' : user === 'teacher' ? 'Teacher' : 'Student'}`;\r\n  }\r\n  return `Good evening, ${user === 'admin' ? 'Admin' : user === 'teacher' ? 'Teacher' : 'Student'}`;\r\n};\r\n\r\nconst Greeting = () => {\r\n  return <h1>{getMenuTitle()}</h1>;\r\n};\r\n\r\nexport default Greeting;\r\n","/* eslint-disable react/no-array-index-key */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-param-reassign */\r\nimport React from 'react';\r\nimport { WithWizard } from 'react-albus';\r\nimport { Button } from 'reactstrap';\r\n\r\nconst BottomNavigation = ({\r\n  className,\r\n  onClickPrev,\r\n  prevLabel,\r\n  onClickNext,\r\n  nextLabel,\r\n}) => {\r\n  return (\r\n    <WithWizard\r\n      render={({ next, previous, step, steps }) => (\r\n        <div className={`wizard-buttons ${className}`}>\r\n          <Button\r\n            color=\"primary\"\r\n            className={`mr-1 ${steps.indexOf(step) <= 0 ? 'disabled' : ''}`}\r\n            onClick={() => {\r\n              onClickPrev(previous, steps, step);\r\n            }}\r\n          >\r\n            {prevLabel}\r\n          </Button>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            className={\r\n              steps.indexOf(step) >= steps.length - 1 ? 'disabled' : ''\r\n            }\r\n            onClick={() => {\r\n              onClickNext(next, steps, step);\r\n            }}\r\n          >\r\n            {nextLabel}\r\n          </Button>\r\n        </div>\r\n      )}\r\n    />\r\n  );\r\n};\r\nexport default BottomNavigation;\r\n","/* eslint-disable react/no-array-index-key */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-param-reassign */\r\nimport React from 'react';\r\nimport { WithWizard } from 'react-albus';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst TopNavigation = ({ className, disableNav, topNavClick }) => {\r\n  const getClassName = (steps, step, index, stepItem) => {\r\n    if (steps.indexOf(step) === index) {\r\n      return 'step-doing';\r\n    }\r\n    if (steps.indexOf(step) > index || stepItem.isDone) {\r\n      stepItem.isDone = true;\r\n      return 'step-done';\r\n    }\r\n    return 'step';\r\n  };\r\n\r\n  const itemClick = (stepItem, push) => {\r\n    if (disableNav) {\r\n      return;\r\n    }\r\n    topNavClick(stepItem, push);\r\n  };\r\n\r\n  return (\r\n    <WithWizard\r\n      render={({ next, previous, step, steps, go, push }) => (\r\n        <ul\r\n          className={`nav nav-tabs ${className}${\r\n            disableNav ? ' disabled' : ''\r\n          }`}\r\n        >\r\n          {steps.map((stepItem, index) => {\r\n            if (!stepItem.hideTopNav) {\r\n              return (\r\n                <li\r\n                  key={`topNavStep_${index}`}\r\n                  className={`nav-item ${getClassName(\r\n                    steps,\r\n                    step,\r\n                    index,\r\n                    stepItem\r\n                  )}`}\r\n                >\r\n                  <NavLink\r\n                    to=\"#\"\r\n                    location={{}}\r\n                    className=\"nav-link\"\r\n                    onClick={() => itemClick(stepItem, push)}\r\n                  >\r\n                    <span>{stepItem.name}</span>\r\n                    <small>{stepItem.desc}</small>\r\n                  </NavLink>\r\n                </li>\r\n              );\r\n            }\r\n            return <span key={`topNavStep_${index}`} />;\r\n          })}\r\n        </ul>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TopNavigation;\r\n","/* eslint-disable no-param-reassign */\r\nimport React, { useState } from 'react';\r\nimport { Card, CardBody, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { Wizard, Steps, Step } from 'react-albus';\r\nimport { injectIntl } from 'react-intl';\r\nimport IntlMessages from 'helpers/IntlMessages';\r\nimport BottomNavigation from 'components/wizard/BottomNavigation';\r\nimport TopNavigation from 'components/wizard/TopNavigation';\r\n\r\nconst Basic = ({ intl }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const topNavClick = (stepItem, push) => {\r\n    push(stepItem.id);\r\n  };\r\n\r\n  const onClickNext = (goToNext, steps, step) => {\r\n    step.isDone = true;\r\n    if (steps.length - 1 <= steps.indexOf(step)) {\r\n      return;\r\n    }\r\n    goToNext();\r\n  };\r\n\r\n  const onClickPrev = (goToPrev, steps, step) => {\r\n    if (steps.indexOf(step) <= 0) {\r\n      return;\r\n    }\r\n    goToPrev();\r\n  };\r\n\r\n  const { messages } = intl;\r\n  return (\r\n    <Card>\r\n      <CardBody className=\"wizard wizard-default\">\r\n        <Wizard>\r\n          <TopNavigation\r\n            className=\"justify-content-center\"\r\n            disableNav={false}\r\n            topNavClick={topNavClick}\r\n          />\r\n          <Steps>\r\n            <Step\r\n              id=\"step1\"\r\n              name={messages['wizard.step-name-1']}\r\n              desc={messages['wizard.step-desc-1']}\r\n            >\r\n              <div className=\"wizard-basic-step\">\r\n                <Form>\r\n                  <FormGroup>\r\n                    <Label>\r\n                      <IntlMessages id=\"forms.name\" />\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      placeholder={messages['forms.name']}\r\n                      value={name}\r\n                      onChange={(e) => setName(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Form>\r\n              </div>\r\n            </Step>\r\n            <Step\r\n              id=\"step2\"\r\n              name={messages['wizard.step-name-2']}\r\n              desc={messages['wizard.step-desc-2']}\r\n            >\r\n              <div className=\"wizard-basic-step\">\r\n                <Form>\r\n                  <FormGroup>\r\n                    <Label>\r\n                      <IntlMessages id=\"forms.email\" />\r\n                    </Label>\r\n                    <Input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      placeholder={messages['forms.email']}\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Form>\r\n              </div>\r\n            </Step>\r\n            <Step\r\n              id=\"step3\"\r\n              name={messages['wizard.step-name-3']}\r\n              desc={messages['wizard.step-desc-3']}\r\n            >\r\n              <div className=\"wizard-basic-step\">\r\n                <Form>\r\n                  <FormGroup>\r\n                    <Label>\r\n                      <IntlMessages id=\"forms.password\" />\r\n                    </Label>\r\n                    <Input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      placeholder={messages['forms.password']}\r\n                      value={password}\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Form>\r\n              </div>\r\n            </Step>\r\n            <Step id=\"step4\" hideTopNav>\r\n              <div className=\"wizard-basic-step text-center\">\r\n                <h2 className=\"mb-2\">\r\n                  <IntlMessages id=\"wizard.content-thanks\" />\r\n                </h2>\r\n                <p>\r\n                  <IntlMessages id=\"wizard.registered\" />\r\n                </p>\r\n              </div>\r\n            </Step>\r\n          </Steps>\r\n          <BottomNavigation\r\n            onClickNext={onClickNext}\r\n            onClickPrev={onClickPrev}\r\n            className=\"justify-content-center\"\r\n            prevLabel={messages['wizard.prev']}\r\n            nextLabel={messages['wizard.next']}\r\n          />\r\n        </Wizard>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\nexport default injectIntl(Basic);\r\n","/* eslint-disable no-param-reassign */\r\nimport React, { useState } from 'react';\r\nimport { Card, CardBody, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { Wizard, Steps, Step } from 'react-albus';\r\nimport { injectIntl } from 'react-intl';\r\nimport IntlMessages from 'helpers/IntlMessages';\r\nimport BottomNavigation from 'components/wizard/BottomNavigation';\r\nimport TopNavigation from 'components/wizard/TopNavigation';\r\n\r\nconst LastStepEnd = ({ intl }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [bottomNavHidden, setBottomNavHidden] = useState(false);\r\n  const [topNavDisabled, setTopNavDisabled] = useState(false);\r\n\r\n  const topNavClick = (stepItem, push) => {\r\n    if (topNavDisabled) {\r\n      return;\r\n    }\r\n    push(stepItem.id);\r\n  };\r\n\r\n  const onClickNext = (goToNext, steps, step) => {\r\n    step.isDone = true;\r\n    if (steps.length - 2 <= steps.indexOf(step)) {\r\n      setBottomNavHidden(true);\r\n      setTopNavDisabled(true);\r\n    }\r\n    if (steps.length - 1 <= steps.indexOf(step)) {\r\n      return;\r\n    }\r\n    goToNext();\r\n  };\r\n\r\n  const onClickPrev = (goToPrev, steps, step) => {\r\n    if (steps.indexOf(step) <= 0) {\r\n      return;\r\n    }\r\n    goToPrev();\r\n  };\r\n\r\n  const { messages } = intl;\r\n  return (\r\n    <Card>\r\n      <CardBody className=\"wizard wizard-default\">\r\n        <Wizard>\r\n          <TopNavigation\r\n            className=\"justify-content-center\"\r\n            disableNav={false}\r\n            topNavClick={topNavClick}\r\n          />\r\n          <Steps>\r\n            <Step\r\n              id=\"step1\"\r\n              name={messages['wizard.step-name-1']}\r\n              desc={messages['wizard.step-desc-1']}\r\n            >\r\n              <div className=\"wizard-basic-step\">\r\n                <Form>\r\n                  <FormGroup>\r\n                    <Label>\r\n                      <IntlMessages id=\"forms.name\" />\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      placeholder={messages['forms.name']}\r\n                      value={name}\r\n                      onChange={(e) => setName(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Form>\r\n              </div>\r\n            </Step>\r\n            <Step\r\n              id=\"step2\"\r\n              name={messages['wizard.step-name-2']}\r\n              desc={messages['wizard.step-desc-2']}\r\n            >\r\n              <div className=\"wizard-basic-step\">\r\n                <Form>\r\n                  <FormGroup>\r\n                    <Label>\r\n                      <IntlMessages id=\"forms.email\" />\r\n                    </Label>\r\n                    <Input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      placeholder={messages['forms.email']}\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Form>\r\n              </div>\r\n            </Step>\r\n            <Step\r\n              id=\"step3\"\r\n              name={messages['wizard.step-name-3']}\r\n              desc={messages['wizard.step-desc-3']}\r\n            >\r\n              <div className=\"wizard-basic-step\">\r\n                <Form>\r\n                  <FormGroup>\r\n                    <Label>\r\n                      <IntlMessages id=\"forms.password\" />\r\n                    </Label>\r\n                    <Input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      placeholder={messages['forms.password']}\r\n                      value={password}\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Form>\r\n              </div>\r\n            </Step>\r\n            <Step id=\"step4\" hideTopNav>\r\n              <div className=\"wizard-basic-step text-center\">\r\n                <h2 className=\"mb-2\">\r\n                  <IntlMessages id=\"wizard.content-thanks\" />\r\n                </h2>\r\n                <p>\r\n                  <IntlMessages id=\"wizard.registered\" />\r\n                </p>\r\n              </div>\r\n            </Step>\r\n          </Steps>\r\n          <BottomNavigation\r\n            onClickNext={onClickNext}\r\n            onClickPrev={onClickPrev}\r\n            className={`justify-content-center ${\r\n              bottomNavHidden && 'invisible'\r\n            }`}\r\n            prevLabel={messages['wizard.prev']}\r\n            nextLabel={messages['wizard.next']}\r\n          />\r\n        </Wizard>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\nexport default injectIntl(LastStepEnd);\r\n","/* eslint-disable no-param-reassign */\r\nimport React, { useState } from 'react';\r\nimport { Card, CardBody, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { Wizard, Steps, Step } from 'react-albus';\r\nimport { injectIntl } from 'react-intl';\r\nimport IntlMessages from 'helpers/IntlMessages';\r\nimport BottomNavigation from 'components/wizard/BottomNavigation';\r\nimport TopNavigation from 'components/wizard/TopNavigation';\r\n\r\nconst TopNavDisabled = ({ intl }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const topNavClick = (stepItem, push) => {\r\n    push(stepItem.id);\r\n  };\r\n\r\n  const onClickNext = (goToNext, steps, step) => {\r\n    step.isDone = true;\r\n    if (steps.length - 1 <= steps.indexOf(step)) {\r\n      return;\r\n    }\r\n    goToNext();\r\n  };\r\n\r\n  const onClickPrev = (goToPrev, steps, step) => {\r\n    if (steps.indexOf(step) <= 0) {\r\n      return;\r\n    }\r\n    goToPrev();\r\n  };\r\n\r\n  const { messages } = intl;\r\n  return (\r\n    <Card>\r\n      <CardBody className=\"wizard wizard-default\">\r\n        <Wizard>\r\n          <TopNavigation\r\n            className=\"justify-content-center\"\r\n            disableNav\r\n            topNavClick={topNavClick}\r\n          />\r\n          <Steps>\r\n            <Step\r\n              id=\"step1\"\r\n              name={messages['wizard.step-name-1']}\r\n              desc={messages['wizard.step-desc-1']}\r\n            >\r\n              <div className=\"wizard-basic-step\">\r\n                <Form>\r\n                  <FormGroup>\r\n                    <Label>\r\n                      <IntlMessages id=\"forms.name\" />\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      placeholder={messages['forms.name']}\r\n                      value={name}\r\n                      onChange={(e) => setName(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Form>\r\n              </div>\r\n            </Step>\r\n            <Step\r\n              id=\"step2\"\r\n              name={messages['wizard.step-name-2']}\r\n              desc={messages['wizard.step-desc-2']}\r\n            >\r\n              <div className=\"wizard-basic-step\">\r\n                <Form>\r\n                  <FormGroup>\r\n                    <Label>\r\n                      <IntlMessages id=\"forms.email\" />\r\n                    </Label>\r\n                    <Input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      placeholder={messages['forms.email']}\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Form>\r\n              </div>\r\n            </Step>\r\n            <Step\r\n              id=\"step3\"\r\n              name={messages['wizard.step-name-3']}\r\n              desc={messages['wizard.step-desc-3']}\r\n            >\r\n              <div className=\"wizard-basic-step\">\r\n                <Form>\r\n                  <FormGroup>\r\n                    <Label>\r\n                      <IntlMessages id=\"forms.password\" />\r\n                    </Label>\r\n                    <Input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      placeholder={messages['forms.password']}\r\n                      value={password}\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Form>\r\n              </div>\r\n            </Step>\r\n            <Step id=\"step4\" hideTopNav>\r\n              <div className=\"wizard-basic-step text-center\">\r\n                <h2 className=\"mb-2\">\r\n                  <IntlMessages id=\"wizard.content-thanks\" />\r\n                </h2>\r\n                <p>\r\n                  <IntlMessages id=\"wizard.registered\" />\r\n                </p>\r\n              </div>\r\n            </Step>\r\n          </Steps>\r\n          <BottomNavigation\r\n            onClickNext={onClickNext}\r\n            onClickPrev={onClickPrev}\r\n            className=\"justify-content-center\"\r\n            prevLabel={messages['wizard.prev']}\r\n            nextLabel={messages['wizard.next']}\r\n          />\r\n        </Wizard>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default injectIntl(TopNavDisabled);\r\n","/* eslint-disable no-param-reassign */\r\nimport React, { createRef, useState } from 'react';\r\nimport { Card, CardBody, FormGroup, Label, Spinner } from 'reactstrap';\r\nimport { Wizard, Steps, Step } from 'react-albus';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport IntlMessages from 'helpers/IntlMessages';\r\nimport BottomNavigation from 'components/wizard/BottomNavigation';\r\nimport TopNavigation from 'components/wizard/TopNavigation';\r\n\r\nconst validateEmail = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = 'Please enter your email address';\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n    error = 'Invalid email address';\r\n  }\r\n  return error;\r\n};\r\n\r\nconst validateName = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = 'Please enter your name';\r\n  } else if (value.length < 2) {\r\n    error = 'Value must be longer than 2 characters';\r\n  }\r\n  return error;\r\n};\r\n\r\nconst validatePassword = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = 'Please enter your password';\r\n  } else if (value.length < 6) {\r\n    error = 'Password must be longer than 6 characters';\r\n  }\r\n  return error;\r\n};\r\n\r\nconst Validation = ({ intl }) => {\r\n  const forms = [createRef(null), createRef(null), createRef(null)];\r\n  const [bottomNavHidden, setBottomNavHidden] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [fields, setFields] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const onClickNext = (goToNext, steps, step) => {\r\n    if (steps.length - 1 <= steps.indexOf(step)) {\r\n      return;\r\n    }\r\n    const formIndex = steps.indexOf(step);\r\n    const form = forms[formIndex].current;\r\n\r\n    form.submitForm().then(() => {\r\n      if (!form.isDirty && form.isValid) {\r\n        const newFields = { ...fields, ...form.values };\r\n        setFields(newFields);\r\n\r\n        if (steps.length - 2 <= steps.indexOf(step)) {\r\n          // done\r\n          setBottomNavHidden(true);\r\n          setLoading(true);\r\n          console.log(newFields);\r\n          setTimeout(() => {\r\n            setLoading(false);\r\n          }, 3000);\r\n        }\r\n        goToNext();\r\n        step.isDone = true;\r\n      }\r\n    });\r\n  };\r\n\r\n  const onClickPrev = (goToPrev, steps, step) => {\r\n    if (steps.indexOf(step) <= 0) {\r\n      return;\r\n    }\r\n    goToPrev();\r\n  };\r\n\r\n  const { messages } = intl;\r\n  return (\r\n    <Card>\r\n      <CardBody className=\"wizard wizard-default\">\r\n        <Wizard>\r\n          <TopNavigation className=\"justify-content-center\" disableNav />\r\n          <Steps>\r\n            <Step\r\n              id=\"step1\"\r\n              name={messages['wizard.step-name-1']}\r\n              desc={messages['wizard.step-desc-1']}\r\n            >\r\n              <div className=\"wizard-basic-step\">\r\n                <Formik\r\n                  innerRef={forms[0]}\r\n                  initialValues={{\r\n                    name: fields.name,\r\n                  }}\r\n                  validateOnMount\r\n                  onSubmit={() => {}}\r\n                >\r\n                  {({ errors, touched }) => (\r\n                    <Form className=\"av-tooltip tooltip-label-right\">\r\n                      <FormGroup>\r\n                        <Label>{messages['forms.name']}</Label>\r\n                        <Field\r\n                          className=\"form-control\"\r\n                          name=\"name\"\r\n                          validate={validateName}\r\n                        />\r\n                        {errors.name && touched.name && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.name}\r\n                          </div>\r\n                        )}\r\n                      </FormGroup>\r\n                    </Form>\r\n                  )}\r\n                </Formik>\r\n              </div>\r\n            </Step>\r\n            <Step\r\n              id=\"step2\"\r\n              name={messages['wizard.step-name-2']}\r\n              desc={messages['wizard.step-desc-2']}\r\n            >\r\n              <div className=\"wizard-basic-step\">\r\n                <Formik\r\n                  innerRef={forms[1]}\r\n                  initialValues={{\r\n                    email: fields.email,\r\n                  }}\r\n                  onSubmit={() => {}}\r\n                  validateOnMount\r\n                >\r\n                  {({ errors, touched }) => (\r\n                    <Form className=\"av-tooltip tooltip-label-right\">\r\n                      <FormGroup>\r\n                        <Label>{messages['forms.email']}</Label>\r\n                        <Field\r\n                          className=\"form-control\"\r\n                          name=\"email\"\r\n                          validate={validateEmail}\r\n                        />\r\n                        {errors.email && touched.email && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.email}\r\n                          </div>\r\n                        )}\r\n                      </FormGroup>\r\n                    </Form>\r\n                  )}\r\n                </Formik>\r\n              </div>\r\n            </Step>\r\n            <Step\r\n              id=\"step3\"\r\n              name={messages['wizard.step-name-3']}\r\n              desc={messages['wizard.step-desc-3']}\r\n            >\r\n              <div className=\"wizard-basic-step\">\r\n                <Formik\r\n                  innerRef={forms[2]}\r\n                  initialValues={{\r\n                    password: fields.password,\r\n                  }}\r\n                  onSubmit={() => {}}\r\n                  validateOnMount\r\n                >\r\n                  {({ errors, touched }) => (\r\n                    <Form className=\"av-tooltip tooltip-label-right error-l-75\">\r\n                      <FormGroup>\r\n                        <Label>{messages['forms.password']}</Label>\r\n                        <Field\r\n                          className=\"form-control\"\r\n                          name=\"password\"\r\n                          type=\"password\"\r\n                          validate={validatePassword}\r\n                        />\r\n                        {errors.password && touched.password && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.password}\r\n                          </div>\r\n                        )}\r\n                      </FormGroup>\r\n                    </Form>\r\n                  )}\r\n                </Formik>\r\n              </div>\r\n            </Step>\r\n            <Step id=\"step4\" hideTopNav>\r\n              <div className=\"wizard-basic-step text-center pt-3\">\r\n                {loading ? (\r\n                  <div>\r\n                    <Spinner color=\"primary\" className=\"mb-1\" />\r\n                    <p>\r\n                      <IntlMessages id=\"wizard.async\" />\r\n                    </p>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <h2 className=\"mb-2\">\r\n                      <IntlMessages id=\"wizard.content-thanks\" />\r\n                    </h2>\r\n                    <p>\r\n                      <IntlMessages id=\"wizard.registered\" />\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </Step>\r\n          </Steps>\r\n          <BottomNavigation\r\n            onClickNext={onClickNext}\r\n            onClickPrev={onClickPrev}\r\n            className={`justify-content-center ${\r\n              bottomNavHidden && 'invisible'\r\n            }`}\r\n            prevLabel={messages['wizard.prev']}\r\n            nextLabel={messages['wizard.next']}\r\n          />\r\n        </Wizard>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\nexport default injectIntl(Validation);\r\n","/* eslint-disable no-param-reassign */\r\nimport React from 'react';\r\nimport { Card, CardBody, Row } from 'reactstrap';\r\nimport { Wizard, Steps, Step } from 'react-albus';\r\nimport { injectIntl } from 'react-intl';\r\nimport IntlMessages from 'helpers/IntlMessages';\r\nimport BottomNavigation from 'components/wizard/BottomNavigation';\r\nimport TopNavigation from 'components/wizard/TopNavigation';\r\nimport { Colxx } from 'components/common/CustomBootstrap';\r\n\r\nconst Layouts = ({ intl }) => {\r\n  const topNavClick = (stepItem, push) => {\r\n    push(stepItem.id);\r\n  };\r\n\r\n  const onClickNext = (goToNext, steps, step) => {\r\n    step.isDone = true;\r\n    if (steps.length - 1 <= steps.indexOf(step)) {\r\n      return;\r\n    }\r\n    goToNext();\r\n  };\r\n\r\n  const onClickPrev = (goToPrev, steps, step) => {\r\n    if (steps.indexOf(step) <= 0) {\r\n      return;\r\n    }\r\n    goToPrev();\r\n  };\r\n\r\n  const { messages } = intl;\r\n  return (\r\n    <Row>\r\n      <Colxx xxs=\"12\" xl=\"6\" className=\"mb-5\">\r\n        <Card>\r\n          <CardBody className=\"wizard wizard-default\">\r\n            <Wizard>\r\n              <TopNavigation\r\n                className=\"justify-content-between\"\r\n                disableNav={false}\r\n                topNavClick={topNavClick}\r\n              />\r\n              <Steps>\r\n                <Step\r\n                  id=\"step1\"\r\n                  name={messages['wizard.step-name-1']}\r\n                  desc={messages['wizard.step-desc-1']}\r\n                >\r\n                  <div className=\"wizard-basic-step text-center\">\r\n                    <p>\r\n                      <IntlMessages id=\"wizard.content-1\" />\r\n                    </p>\r\n                  </div>\r\n                </Step>\r\n                <Step\r\n                  id=\"step2\"\r\n                  name={messages['wizard.step-name-2']}\r\n                  desc={messages['wizard.step-desc-2']}\r\n                >\r\n                  <div className=\"wizard-basic-step text-center\">\r\n                    <p>\r\n                      <IntlMessages id=\"wizard.content-2\" />\r\n                    </p>\r\n                  </div>\r\n                </Step>\r\n                <Step\r\n                  id=\"step3\"\r\n                  name={messages['wizard.step-name-3']}\r\n                  desc={messages['wizard.step-desc-3']}\r\n                  hideTopNav\r\n                >\r\n                  <div className=\"wizard-basic-step text-center\">\r\n                    <h2 className=\"mb-2\">\r\n                      <IntlMessages id=\"wizard.content-thanks\" />\r\n                    </h2>\r\n                    <p>\r\n                      <IntlMessages id=\"wizard.content-3\" />\r\n                    </p>\r\n                  </div>\r\n                </Step>\r\n              </Steps>\r\n              <BottomNavigation\r\n                onClickNext={onClickNext}\r\n                onClickPrev={onClickPrev}\r\n                className=\"justify-content-between\"\r\n                prevLabel={messages['wizard.prev']}\r\n                nextLabel={messages['wizard.next']}\r\n              />\r\n            </Wizard>\r\n          </CardBody>\r\n        </Card>\r\n      </Colxx>\r\n      <Colxx xxs=\"12\" xl=\"6\">\r\n        <Card>\r\n          <CardBody className=\"wizard wizard-default\">\r\n            <Wizard>\r\n              <TopNavigation\r\n                className=\"justify-content-start\"\r\n                disableNav={false}\r\n                topNavClick={topNavClick}\r\n              />\r\n              <Steps>\r\n                <Step\r\n                  id=\"step1\"\r\n                  name={messages['wizard.step-name-1']}\r\n                  desc={messages['wizard.step-desc-1']}\r\n                >\r\n                  <div className=\"wizard-basic-step\">\r\n                    <p>\r\n                      <IntlMessages id=\"wizard.content-1\" />\r\n                    </p>\r\n                  </div>\r\n                </Step>\r\n                <Step\r\n                  id=\"step2\"\r\n                  name={messages['wizard.step-name-2']}\r\n                  desc={messages['wizard.step-desc-2']}\r\n                >\r\n                  <div className=\"wizard-basic-step\">\r\n                    <p>\r\n                      <IntlMessages id=\"wizard.content-2\" />\r\n                    </p>\r\n                  </div>\r\n                </Step>\r\n                <Step\r\n                  id=\"step3\"\r\n                  name={messages['wizard.step-name-3']}\r\n                  desc={messages['wizard.step-desc-3']}\r\n                  hideTopNav\r\n                >\r\n                  <div className=\"wizard-basic-step\">\r\n                    <h2 className=\"mb-2\">\r\n                      <IntlMessages id=\"wizard.content-thanks\" />\r\n                    </h2>\r\n                    <p>\r\n                      <IntlMessages id=\"wizard.content-3\" />\r\n                    </p>\r\n                  </div>\r\n                </Step>\r\n              </Steps>\r\n              <BottomNavigation\r\n                onClickNext={onClickNext}\r\n                onClickPrev={onClickPrev}\r\n                className=\"justify-content-start\"\r\n                prevLabel={messages['wizard.prev']}\r\n                nextLabel={messages['wizard.next']}\r\n              />\r\n            </Wizard>\r\n          </CardBody>\r\n        </Card>\r\n      </Colxx>\r\n    </Row>\r\n  );\r\n};\r\nexport default injectIntl(Layouts);\r\n","import React from 'react';\r\nimport { Row } from 'reactstrap';\r\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\r\nimport Breadcrumb from 'containers/navs/Greeting';\r\nimport Basic from 'containers/wizard/Basic';\r\nimport LastStepEnd from 'containers/wizard/LastStepEnd';\r\nimport TopNavDisabled from 'containers/wizard/TopNavDisabled';\r\nimport Validation from 'containers/wizard/Validation';\r\nimport Layouts from 'containers/wizard/Layouts';\r\n\r\nconst FormWizard = ({ match }) => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Colxx xxs=\"12\">\r\n          <Breadcrumb heading=\"menu.form-wizard\" match={match} />\r\n          <Separator className=\"mb-5\" />\r\n        </Colxx>\r\n      </Row>\r\n      <Row>\r\n        <Colxx xxs=\"12\" className=\"mb-5\">\r\n          <h5 className=\"mb-4\">Basic</h5>\r\n          <Basic />\r\n        </Colxx>\r\n        <Colxx xxs=\"12\" className=\"mb-5\">\r\n          <h5 className=\"mb-4\">Last Step End</h5>\r\n          <LastStepEnd />\r\n        </Colxx>\r\n        <Colxx xxs=\"12\" className=\"mb-5\">\r\n          <h5 className=\"mb-4\">Top Navigation Disabled</h5>\r\n          <TopNavDisabled />\r\n        </Colxx>\r\n        <Colxx xxs=\"12\" className=\"mb-5\">\r\n          <h5 className=\"mb-4\">Validation</h5>\r\n          <Validation />\r\n        </Colxx>\r\n        <Colxx xxs=\"12\" className=\"mb-5\">\r\n          <h5 className=\"mb-4\">Layouts</h5>\r\n          <Layouts />\r\n        </Colxx>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default FormWizard;\r\n"],"sourceRoot":""}