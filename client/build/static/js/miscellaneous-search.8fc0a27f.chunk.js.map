{"version":3,"sources":["containers/navs/Greeting.js","views/app/pages/miscellaneous/search.js","../node_modules/reactstrap/es/CardBody.js","containers/pages/Pagination.js"],"names":["getMenuTitle","time","Date","getHours","user","window","localStorage","getItem","Greeting","apiUrl","servicePath","Search","match","useState","isLoading","setIsLoading","items","setItems","currentPage","setCurrentPage","keyword","pageSize","totalPage","setTotalPage","useEffect","a","axios","get","then","res","data","fetchData","xxs","heading","className","map","item","i","length","to","id","title","category","description","onChangePage","propTypes","tag","tagPropType","PropTypes","string","cssModule","object","innerRef","oneOfType","func","CardBody","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps","Pagination","numberLimit","lastIsActive","firstIsActive","startPoint","endPoint","parseInt","points","push","firstPageButtonClassName","lastPageButtonClassName","prevPageButtonClassName","nextPageButtonClassName","onClick"],"mappings":"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","file":"static/js/miscellaneous-search.8fc0a27f.chunk.js","sourcesContent":["/* eslint no-nested-ternary: 0 */\r\nimport React from 'react';\r\n\r\nconst getMenuTitle = () => {\r\n  const d = new Date();\r\n  const time = d.getHours();\r\n\r\n  const user = window.localStorage.getItem('user');\r\n\r\n  if (time < 12) {\r\n    return `Good morning, ${user === 'admin' ? 'Admin' : user === 'teacher' ? 'Teacher' : 'Student'}`;\r\n  }\r\n  if (time >= 12 && time < 16) {\r\n    return `Good afternoon, ${user === 'admin' ? 'Admin' : user === 'teacher' ? 'Teacher' : 'Student'}`;\r\n  }\r\n  return `Good evening, ${user === 'admin' ? 'Admin' : user === 'teacher' ? 'Teacher' : 'Student'}`;\r\n};\r\n\r\nconst Greeting = () => {\r\n  return <h1>{getMenuTitle()}</h1>;\r\n};\r\n\r\nexport default Greeting;\r\n","/* eslint-disable react/no-array-index-key */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Row, Card, CardBody } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport Pagination from 'containers/pages/Pagination';\r\nimport { servicePath } from 'constants/defaultValues';\r\nimport Breadcrumb from 'containers/navs/Greeting';\r\nimport { Separator, Colxx } from 'components/common/CustomBootstrap';\r\n\r\nconst apiUrl = `${servicePath}/cakes/paging`;\r\n\r\nconst Search = ({ match }) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [items, setItems] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [keyword] = useState('Cake');\r\n  const [pageSize] = useState(10);\r\n  const [totalPage, setTotalPage] = useState(0);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      axios\r\n        .get(\r\n          `${apiUrl}?pageSize=${pageSize}&currentPage=${currentPage}&search=${keyword}`\r\n        )\r\n        .then((res) => {\r\n          return res.data;\r\n        })\r\n        .then((data) => {\r\n          setItems(data.data);\r\n          setTotalPage(data.totalPage);\r\n          setIsLoading(false);\r\n        });\r\n    }\r\n    fetchData();\r\n  }, [pageSize, currentPage, keyword]);\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Colxx xxs=\"12\">\r\n          <Breadcrumb heading=\"menu.search\" match={match} />\r\n          <Separator className=\"mb-5\" />\r\n        </Colxx>\r\n      </Row>\r\n      <Row>\r\n        <Colxx xxs=\"12\" className=\"mb-4\">\r\n          <Card>\r\n            <CardBody>\r\n              {!isLoading ? (\r\n                items.map((item, i) => {\r\n                  return (\r\n                    <div\r\n                      key={`item_${i}`}\r\n                      className={`${items.length !== i + 1 ? 'mb-3' : ''}`}\r\n                    >\r\n                      <NavLink to={`#${item.id}`} className=\"w-40 w-sm-100\">\r\n                        <p className=\"list-item-heading mb-1 color-theme-1\">\r\n                          {item.title}\r\n                        </p>\r\n                        <p className=\"mb-1 text-muted text-small\">\r\n                          Products | {item.category}\r\n                        </p>\r\n                        <p className=\"mb-4 text-small\">{item.description}</p>\r\n                      </NavLink>\r\n                      {items.length !== i + 1 && <Separator />}\r\n                    </div>\r\n                  );\r\n                })\r\n              ) : (\r\n                <div className=\"loading\" />\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Colxx>\r\n        <Pagination\r\n          currentPage={currentPage}\r\n          totalPage={totalPage}\r\n          onChangePage={(i) => setCurrentPage(i)}\r\n        />\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import React from 'react';\r\nimport { Nav, NavItem, NavLink } from 'reactstrap';\r\nimport { Colxx } from 'components/common/CustomBootstrap';\r\n\r\nconst Pagination = ({\r\n  totalPage = 0,\r\n  currentPage = 1,\r\n  numberLimit = 5,\r\n  lastIsActive = true,\r\n  firstIsActive = true,\r\n  onChangePage,\r\n}) => {\r\n  let startPoint = 1;\r\n  let endPoint = numberLimit;\r\n\r\n  if (numberLimit > totalPage) {\r\n    startPoint = 1;\r\n    endPoint = totalPage;\r\n  } else if (currentPage <= parseInt(numberLimit / 2, 10)) {\r\n    startPoint = 1;\r\n    endPoint = numberLimit;\r\n  } else if (currentPage + parseInt(numberLimit / 2, 10) <= totalPage) {\r\n    startPoint = currentPage - parseInt(numberLimit / 2, 10);\r\n    endPoint = currentPage + parseInt(numberLimit / 2, 10);\r\n  } else {\r\n    startPoint = totalPage - (numberLimit - 1);\r\n    endPoint = totalPage;\r\n  }\r\n  startPoint = startPoint === 0 ? 1 : startPoint;\r\n  const points = [];\r\n  for (let i = startPoint; i <= endPoint; i += 1) {\r\n    points.push(i);\r\n  }\r\n\r\n  const firstPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\r\n  const lastPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\r\n  const prevPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\r\n  const nextPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\r\n  return totalPage > 1 ? (\r\n    <Colxx xxs=\"12\" className=\"mt-3 mb-3\">\r\n      <Nav className=\"pagination justify-content-center\">\r\n        {firstIsActive && (\r\n          <NavItem className={`page-item ${firstPageButtonClassName}`}>\r\n            <NavLink\r\n              className=\"page-link first c-pointer\"\r\n              onClick={() => onChangePage(1)}\r\n            >\r\n              <i className=\"simple-icon-control-start\" />\r\n            </NavLink>\r\n          </NavItem>\r\n        )}\r\n\r\n        <NavItem className={`page-item ${prevPageButtonClassName}`}>\r\n          <NavLink\r\n            className=\"page-link prev c-pointer\"\r\n            onClick={() => onChangePage(currentPage - 1)}\r\n          >\r\n            <i className=\"simple-icon-arrow-left\" />\r\n          </NavLink>\r\n        </NavItem>\r\n        {points.map((i) => {\r\n          return (\r\n            <NavItem\r\n              key={i}\r\n              className={`page-item ${currentPage === i && 'active'}`}\r\n            >\r\n              <NavLink\r\n                className=\"page-link c-pointer\"\r\n                onClick={() => onChangePage(i)}\r\n              >\r\n                {i}\r\n              </NavLink>\r\n            </NavItem>\r\n          );\r\n        })}\r\n        <NavItem className={`page-item ${nextPageButtonClassName}`}>\r\n          <NavLink\r\n            className=\"page-link next c-pointer\"\r\n            onClick={() => onChangePage(currentPage + 1)}\r\n          >\r\n            <i className=\"simple-icon-arrow-right\" />\r\n          </NavLink>\r\n        </NavItem>\r\n        {lastIsActive && (\r\n          <NavItem className={`page-item ${lastPageButtonClassName}`}>\r\n            <NavLink\r\n              className=\"page-link last c-pointer\"\r\n              onClick={() => onChangePage(totalPage)}\r\n            >\r\n              <i className=\"simple-icon-control-end\" />\r\n            </NavLink>\r\n          </NavItem>\r\n        )}\r\n      </Nav>\r\n    </Colxx>\r\n  ) : (\r\n    <Colxx xxs=\"12\" className=\"mt-2\" />\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n"],"sourceRoot":""}