{"version":3,"sources":["../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/TabContext.js","containers/applications/ChatApplicationMenu.js","components/applications/ChatHeading.js","components/applications/MessageCard.js","components/applications/SaySomething.js","views/app/applications/chat.js","../node_modules/reactstrap/es/TabContent.js","../node_modules/reactstrap/es/TabPane.js","../node_modules/reactstrap/es/CardHeader.js","components/common/ApplicationMenu.js"],"names":["propTypes","tag","tagPropType","inverse","PropTypes","bool","color","string","body","outline","className","cssModule","object","innerRef","oneOfType","func","Card","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps","CardBody","TabContext","createContext","injectIntl","connect","chatApp","contacts","allContacts","conversations","loadingConversations","loadingContacts","currentUser","changeConversationAction","changeConversation","createConversationAction","createConversation","searchContactAction","searchContact","intl","activeTab","toggleAppMenu","useState","searchKey","setSearchKey","handleSearchContact","keyword","length","messages","ApplicationMenu","CardHeader","Nav","tabs","NavItem","to","location","classnames","active","onClick","tab","IntlMessages","id","type","placeholder","value","onChange","e","target","TabContent","TabPane","tabId","options","suppressScrollX","wheelPropagation","map","item","index","otherUser","find","u","users","x","selectedUserId","alt","name","src","thumb","lastMessageTime","filter","userId","includes","ChatHeading","lastSeenDate","memo","MessageCard","sender","currentUserid","time","text","SaySomething","messageInput","handleChatInputPress","handleChatInputChange","handleSendButtonClick","Input","onKeyPress","Button","selectedUser","getContactsAction","getContacts","getConversationsAction","getConversations","addMessageToConversationAction","addMessageToConversation","setActiveTab","setMessageInput","scrollBarRef","useRef","useEffect","document","classList","add","remove","focusScrollBottom","setTimeout","current","_ps","element","scrollTop","contentHeight","selectedConversation","Row","xxs","key","any","_Component","_this","call","this","state","_inheritsLoose","getDerivedStateFromProps","nextProps","prevState","prototype","render","_this$props","omit","Object","keys","Provider","activeTabId","Component","getClasses","Consumer","_ref","children","containerRef","isOpen","setIsOpen","handleDocumentClick","container","contains","forEach","event","addEventListener","removeEventListener"],"mappings":"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","file":"static/js/application-chat.8cce5a3b.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import React from 'react';\n/**\n * TabContext\n * {\n *  activeTabId: PropTypes.any\n * }\n */\n\nexport var TabContext = /*#__PURE__*/React.createContext({});","/* eslint-disable react/no-array-index-key */\r\nimport React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Nav, TabContent, TabPane, CardHeader, NavItem } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport classnames from 'classnames';\r\n\r\nimport IntlMessages from 'helpers/IntlMessages';\r\nimport ApplicationMenu from 'components/common/ApplicationMenu';\r\n\r\nimport {\r\n  changeConversation,\r\n  createConversation,\r\n  searchContact,\r\n} from 'redux/actions';\r\n\r\nconst ChatApplicationMenu = ({\r\n  intl,\r\n  activeTab,\r\n  toggleAppMenu,\r\n  contacts,\r\n  allContacts,\r\n  conversations,\r\n  loadingConversations,\r\n  loadingContacts,\r\n  currentUser,\r\n\r\n  changeConversationAction,\r\n  createConversationAction,\r\n  searchContactAction,\r\n}) => {\r\n  const [searchKey, setSearchKey] = useState('');\r\n\r\n  const handleSearchContact = (keyword) => {\r\n    setSearchKey(keyword);\r\n\r\n    if (keyword.length > 0) {\r\n      if (activeTab !== 'contacts') {\r\n        toggleAppMenu('contacts');\r\n      }\r\n      searchContactAction(keyword);\r\n    } else {\r\n      searchContactAction('');\r\n    }\r\n  };\r\n\r\n  const toggleMenu = (tab) => {\r\n    if (activeTab !== tab) {\r\n      toggleAppMenu(tab);\r\n    }\r\n    if (tab === 'messages') {\r\n      handleSearchContact('');\r\n    }\r\n  };\r\n\r\n  const handleConversationClick = (e, selectedUserId) => {\r\n    changeConversationAction(selectedUserId);\r\n    handleSearchContact('');\r\n  };\r\n\r\n  const handleContactClick = (userId) => {\r\n    if (activeTab !== 'messages') {\r\n      toggleAppMenu('messages');\r\n      searchContactAction('');\r\n    }\r\n\r\n    const conversation = conversations.find(\r\n      (x) => x.users.includes(currentUser.id) && x.users.includes(userId)\r\n    );\r\n    if (conversation) {\r\n      changeConversationAction(userId);\r\n    } else {\r\n      createConversationAction(currentUser.id, userId, conversations);\r\n      changeConversationAction(userId);\r\n    }\r\n  };\r\n\r\n  const { messages } = intl;\r\n\r\n  return (\r\n    <ApplicationMenu>\r\n      <CardHeader className=\"pl-0 pr-0\">\r\n        <Nav tabs className=\"card-header-tabs ml-0 mr-0\">\r\n          <NavItem className=\"w-50 text-center\">\r\n            <NavLink\r\n              to=\"#\"\r\n              location={{}}\r\n              className={classnames({\r\n                active: activeTab === 'messages',\r\n                'nav-link': true,\r\n              })}\r\n              onClick={() => toggleMenu('messages')}\r\n            >\r\n              <IntlMessages id=\"chat.messages\" />\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem className=\"w-50 text-center\">\r\n            <NavLink\r\n              to=\"#\"\r\n              location={{}}\r\n              className={classnames({\r\n                active: activeTab === 'contacts',\r\n                'nav-link': true,\r\n              })}\r\n              onClick={() => toggleAppMenu('contacts')}\r\n            >\r\n              <IntlMessages id=\"chat.contacts\" />\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n      </CardHeader>\r\n\r\n      <div className=\"pt-4 pr-4 pl-4 pb-0\">\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control rounded\"\r\n            placeholder={messages['menu.search']}\r\n            value={searchKey}\r\n            onChange={(e) => handleSearchContact(e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <TabContent activeTab={activeTab} className=\"chat-app-tab-content\">\r\n        <TabPane tabId=\"messages\" className=\"chat-app-tab-pane\">\r\n          <PerfectScrollbar\r\n            options={{ suppressScrollX: true, wheelPropagation: false }}\r\n          >\r\n            <div className=\"pt-2 pr-4 pl-4 pb-2\">\r\n              {loadingContacts &&\r\n                loadingConversations &&\r\n                conversations.map((item, index) => {\r\n                  const otherUser = allContacts.find(\r\n                    (u) => u.id === item.users.find((x) => x !== currentUser.id)\r\n                  );\r\n                  return (\r\n                    <div\r\n                      key={index}\r\n                      className=\"d-flex flex-row mb-1 border-bottom pb-3 mb-3\"\r\n                    >\r\n                      <NavLink\r\n                        className=\"d-flex\"\r\n                        to=\"#\"\r\n                        location={{}}\r\n                        onClick={(e) =>\r\n                          handleConversationClick(e, otherUser.id)\r\n                        }\r\n                      >\r\n                        <img\r\n                          alt={otherUser.name}\r\n                          src={otherUser.thumb}\r\n                          className=\"img-thumbnail border-0 rounded-circle mr-3 list-thumbnail align-self-center xsmall\"\r\n                        />\r\n                        <div className=\"d-flex flex-grow-1 min-width-zero\">\r\n                          <div className=\"pl-0 align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero\">\r\n                            <div className=\"min-width-zero\">\r\n                              <p className=\" mb-0 truncate\">{otherUser.name}</p>\r\n                              <p className=\"mb-1 text-muted text-small\">\r\n                                {item.lastMessageTime}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </NavLink>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n          </PerfectScrollbar>\r\n        </TabPane>\r\n        <TabPane tabId=\"contacts\" className=\"chat-app-tab-pane\">\r\n          <PerfectScrollbar\r\n            options={{ suppressScrollX: true, wheelPropagation: false }}\r\n          >\r\n            <div className=\"pt-2 pr-4 pl-4 pb-2\">\r\n              {loadingContacts &&\r\n                contacts\r\n                  .filter((x) => x.id !== currentUser.id)\r\n                  .map((item, index) => {\r\n                    return (\r\n                      <div\r\n                        key={index}\r\n                        className=\"d-flex flex-row mb-3 border-bottom pb-3\"\r\n                      >\r\n                        <NavLink\r\n                          className=\"d-flex\"\r\n                          to=\"#\"\r\n                          location={{}}\r\n                          onClick={() => handleContactClick(item.id)}\r\n                        >\r\n                          <img\r\n                            alt={item.name}\r\n                            src={item.thumb}\r\n                            className=\"img-thumbnail border-0 rounded-circle mr-3 list-thumbnail align-self-center xsmall\"\r\n                          />\r\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\r\n                            <div className=\"m-2 pl-0 align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero\">\r\n                              <div className=\"min-width-zero\">\r\n                                <p className=\"mb-0 truncate\">{item.name}</p>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </NavLink>\r\n                      </div>\r\n                    );\r\n                  })}\r\n            </div>\r\n          </PerfectScrollbar>\r\n        </TabPane>\r\n      </TabContent>\r\n    </ApplicationMenu>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ chatApp }) => {\r\n  const {\r\n    contacts,\r\n    allContacts,\r\n    conversations,\r\n    loadingConversations,\r\n    loadingContacts,\r\n    currentUser,\r\n  } = chatApp;\r\n  return {\r\n    contacts,\r\n    allContacts,\r\n    conversations,\r\n    loadingConversations,\r\n    loadingContacts,\r\n    currentUser,\r\n  };\r\n};\r\nexport default injectIntl(\r\n  connect(mapStateToProps, {\r\n    changeConversationAction: changeConversation,\r\n    createConversationAction: createConversation,\r\n    searchContactAction: searchContact,\r\n  })(ChatApplicationMenu)\r\n);\r\n","import React from 'react';\r\n\r\nconst ChatHeading = ({ name, thumb, lastSeenDate }) => {\r\n  return (\r\n    <>\r\n      <div className=\"d-flex flex-row chat-heading\">\r\n        <div className=\"d-flex\">\r\n          <img\r\n            alt={name}\r\n            src={thumb}\r\n            className=\"img-thumbnail border-0 rounded-circle ml-0 mr-4 list-thumbnail align-self-center small\"\r\n          />\r\n        </div>\r\n        <div className=\" d-flex min-width-zero\">\r\n          <div className=\"card-body pl-0 align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero\">\r\n            <div className=\"min-width-zero\">\r\n              <div>\r\n                <p className=\"list-item-heading mb-1 truncate \">{name}</p>\r\n              </div>\r\n              <p className=\"mb-0 text-muted text-small\">\r\n                {lastSeenDate === '0' ? '-' : lastSeenDate}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"separator mb-5\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(ChatHeading);\r\n","import React from 'react';\r\nimport { Card, CardBody } from 'reactstrap';\r\n\r\nconst MessageCard = ({ sender, item, currentUserid }) => {\r\n  return (\r\n    <>\r\n      <Card\r\n        className={`d-inline-block mb-3 float-${\r\n          item.sender !== currentUserid ? 'left' : 'right'\r\n        }`}\r\n      >\r\n        <div className=\"position-absolute  pt-1 pr-2 r-0\">\r\n          <span className=\"text-extra-small text-muted\">{item.time}</span>\r\n        </div>\r\n        <CardBody>\r\n          <div className=\"d-flex flex-row pb-1\">\r\n            <img\r\n              alt={sender.name}\r\n              src={sender.thumb}\r\n              className=\"img-thumbnail border-0 rounded-circle mr-3 list-thumbnail align-self-center xsmall\"\r\n            />\r\n            <div className=\" d-flex flex-grow-1 min-width-zero\">\r\n              <div className=\"m-2 pl-0 align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero\">\r\n                <div className=\"min-width-zero\">\r\n                  <p className=\"mb-0 truncate list-item-heading\">\r\n                    {sender.name}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"chat-text-left\">\r\n            <p className=\"mb-0 text-semi-muted\">{item.text}</p>\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n      <div className=\"clearfix\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(MessageCard);\r\n","import React from 'react';\r\nimport { Input, Button } from 'reactstrap';\r\n\r\nconst SaySomething = ({\r\n  placeholder,\r\n  messageInput,\r\n  handleChatInputPress,\r\n  handleChatInputChange,\r\n  handleSendButtonClick,\r\n}) => {\r\n  return (\r\n    <div className=\"chat-input-container d-flex justify-content-between align-items-center\">\r\n      <Input\r\n        className=\"form-control flex-grow-1\"\r\n        type=\"text\"\r\n        placeholder={placeholder}\r\n        value={messageInput}\r\n        onKeyPress={(e) => handleChatInputPress(e)}\r\n        onChange={(e) => handleChatInputChange(e)}\r\n      />\r\n      <div>\r\n        <Button outline color=\"primary\" className=\"icon-button large ml-1\">\r\n          <i className=\"simple-icon-paper-clip\" />\r\n        </Button>\r\n\r\n        <Button\r\n          color=\"primary\"\r\n          className=\"icon-button large ml-1\"\r\n          onClick={() => handleSendButtonClick()}\r\n        >\r\n          <i className=\"simple-icon-arrow-right\" />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default React.memo(SaySomething);\r\n","/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable react/no-array-index-key */\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Row } from 'reactstrap';\r\n\r\nimport { Colxx } from 'components/common/CustomBootstrap';\r\n\r\nimport {\r\n  getContacts,\r\n  getConversations,\r\n  changeConversation,\r\n  addMessageToConversation,\r\n} from 'redux/actions';\r\nimport ChatApplicationMenu from 'containers/applications/ChatApplicationMenu';\r\nimport ChatHeading from 'components/applications/ChatHeading';\r\nimport MessageCard from 'components/applications/MessageCard';\r\nimport SaySomething from 'components/applications/SaySomething';\r\n\r\nconst ChatApp = ({\r\n  intl,\r\n  allContacts,\r\n  conversations,\r\n  loadingConversations,\r\n  loadingContacts,\r\n  currentUser,\r\n  selectedUser,\r\n  selectedUserId,\r\n\r\n  getContactsAction,\r\n  getConversationsAction,\r\n  changeConversationAction,\r\n  addMessageToConversationAction,\r\n}) => {\r\n  const [activeTab, setActiveTab] = useState('messages');\r\n  const [messageInput, setMessageInput] = useState('');\r\n  const scrollBarRef = useRef(null);\r\n  useEffect(() => {\r\n    document.body.classList.add('no-footer');\r\n    const currentUserId = 0;\r\n    getContactsAction();\r\n    getConversationsAction(currentUserId);\r\n\r\n    return () => {\r\n      document.body.classList.remove('no-footer');\r\n    };\r\n  }, [getContactsAction, getConversationsAction]);\r\n\r\n  const focusScrollBottom = () => {\r\n    setTimeout(() => {\r\n      if (scrollBarRef.current) {\r\n        scrollBarRef.current._ps.element.scrollTop =\r\n          scrollBarRef.current._ps.contentHeight;\r\n      }\r\n    }, 100);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loadingConversations && loadingContacts && selectedUser == null) {\r\n      changeConversationAction(selectedUserId);\r\n      focusScrollBottom();\r\n    }\r\n  }, [\r\n    changeConversationAction,\r\n    loadingContacts,\r\n    loadingConversations,\r\n    selectedUser,\r\n    selectedUserId,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    focusScrollBottom();\r\n  }, [selectedUserId]);\r\n\r\n  const handleChatInputPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      if (messageInput.length > 0) {\r\n        addMessageToConversationAction(\r\n          currentUser.id,\r\n          selectedUser.id,\r\n          messageInput,\r\n          conversations\r\n        );\r\n        setMessageInput('');\r\n        setActiveTab('messages');\r\n        focusScrollBottom();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSendButtonClick = () => {\r\n    if (messageInput.length > 0) {\r\n      addMessageToConversationAction(\r\n        currentUser.id,\r\n        selectedUser.id,\r\n        messageInput,\r\n        conversations\r\n      );\r\n      setMessageInput('');\r\n      setActiveTab('messages');\r\n      focusScrollBottom();\r\n    }\r\n  };\r\n\r\n  const { messages } = intl;\r\n\r\n  const selectedConversation =\r\n    loadingConversations && loadingContacts && selectedUser\r\n      ? conversations.find(\r\n          (x) =>\r\n            x.users.includes(currentUser.id) &&\r\n            x.users.includes(selectedUser.id)\r\n        )\r\n      : null;\r\n\r\n  return loadingConversations && loadingContacts ? (\r\n    <>\r\n      <Row className=\"app-row\">\r\n        <Colxx xxs=\"12\" className=\"chat-app\">\r\n          {loadingConversations && selectedUser && (\r\n            <ChatHeading\r\n              name={selectedUser.name}\r\n              thumb={selectedUser.thumb}\r\n              lastSeenDate={selectedUser.lastSeenDate}\r\n            />\r\n          )}\r\n\r\n          {selectedConversation && (\r\n            <PerfectScrollbar\r\n              ref={scrollBarRef}\r\n              // containerRef={(ref) => {}}\r\n              options={{ suppressScrollX: true, wheelPropagation: false }}\r\n            >\r\n              {selectedConversation.messages.map((item, index) => {\r\n                const sender = allContacts.find((x) => x.id === item.sender);\r\n                return (\r\n                  <MessageCard\r\n                    key={index}\r\n                    sender={sender}\r\n                    item={item}\r\n                    currentUserid={currentUser.id}\r\n                  />\r\n                );\r\n              })}\r\n            </PerfectScrollbar>\r\n          )}\r\n        </Colxx>\r\n      </Row>\r\n      <SaySomething\r\n        placeholder={messages['chat.saysomething']}\r\n        messageInput={messageInput}\r\n        handleChatInputPress={handleChatInputPress}\r\n        handleChatInputChange={(e) => {\r\n          setMessageInput(e.target.value);\r\n        }}\r\n        handleSendButtonClick={handleSendButtonClick}\r\n      />\r\n      <ChatApplicationMenu activeTab={activeTab} toggleAppMenu={setActiveTab} />\r\n    </>\r\n  ) : (\r\n    <div className=\"loading\" />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ chatApp }) => {\r\n  const {\r\n    allContacts,\r\n    conversations,\r\n    loadingConversations,\r\n    loadingContacts,\r\n    currentUser,\r\n    selectedUser,\r\n    selectedUserId,\r\n  } = chatApp;\r\n\r\n  return {\r\n    allContacts,\r\n    conversations,\r\n    loadingConversations,\r\n    loadingContacts,\r\n    currentUser,\r\n    selectedUser,\r\n    selectedUserId,\r\n  };\r\n};\r\nexport default injectIntl(\r\n  connect(mapStateToProps, {\r\n    getContactsAction: getContacts,\r\n    getConversationsAction: getConversations,\r\n    changeConversationAction: changeConversation,\r\n    addMessageToConversationAction: addMessageToConversation,\r\n  })(ChatApp)\r\n);\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, omit, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  activeTab: PropTypes.any,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar TabContent = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TabContent, _Component);\n\n  TabContent.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.activeTab !== nextProps.activeTab) {\n      return {\n        activeTab: nextProps.activeTab\n      };\n    }\n\n    return null;\n  };\n\n  function TabContent(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      activeTab: _this.props.activeTab\n    };\n    return _this;\n  }\n\n  var _proto = TabContent.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        Tag = _this$props.tag;\n    var attributes = omit(this.props, Object.keys(propTypes));\n    var classes = mapToCssModules(classNames('tab-content', className), cssModule);\n    return /*#__PURE__*/React.createElement(TabContext.Provider, {\n      value: {\n        activeTabId: this.state.activeTab\n      }\n    }, /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    })));\n  };\n\n  return TabContent;\n}(Component);\n\nexport default TabContent;\nTabContent.propTypes = propTypes;\nTabContent.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  tabId: PropTypes.any\n};\nvar defaultProps = {\n  tag: 'div'\n};\nexport default function TabPane(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabId = props.tabId,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tabId\", \"tag\"]);\n\n  var getClasses = function getClasses(activeTabId) {\n    return mapToCssModules(classNames('tab-pane', className, {\n      active: tabId === activeTabId\n    }), cssModule);\n  };\n\n  return /*#__PURE__*/React.createElement(TabContext.Consumer, null, function (_ref) {\n    var activeTabId = _ref.activeTabId;\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: getClasses(activeTabId)\n    }));\n  });\n}\nTabPane.propTypes = propTypes;\nTabPane.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { NavLink } from 'reactstrap';\r\n\r\nconst ApplicationMenu = ({ children }) => {\r\n  const containerRef = useRef();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleDocumentClick = (e) => {\r\n    if (isOpen) {\r\n      const container = containerRef.current;\r\n      if (container.contains(e.target) || container === e.target) {\r\n        return;\r\n      }\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    ['click', 'touchstart'].forEach((event) =>\r\n      document.addEventListener(event, handleDocumentClick, false)\r\n    );\r\n\r\n    return () => {\r\n      ['click', 'touchstart'].forEach((event) =>\r\n        document.removeEventListener(event, handleDocumentClick, false)\r\n      );\r\n    };\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <div ref={containerRef} className={`app-menu ${isOpen ? 'shown' : ''}`}>\r\n      {children}\r\n      <NavLink\r\n        className=\"app-menu-button d-inline-block d-xl-none\"\r\n        onClick={() => setIsOpen(!isOpen)}\r\n      >\r\n        <i className=\"simple-icon-options\" />\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ApplicationMenu;\r\n"],"sourceRoot":""}